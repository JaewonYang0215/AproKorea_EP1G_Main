;#include <stdio.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include "IPCLib.h"
;#include <string.h>
;#include <math.h>
;#include "../Uart/uart.h"
;#include "../I2CLib/I2CLIb.h"
;#include "../InADC/InAdc.h"
;#include "../DAC7611/DAC7611.h"
;
;extern BYTE gElMatrix[4];
;extern WORD goldTime1ms;
;extern WORD gTime1ms;
;extern int gVoltage;
;extern BYTE gMode;
;extern BOOL gRunFlag;
;extern int gDose;
;extern int gDepth;
;extern int gSpeed;
;extern BYTE gFlag;
;extern BYTE gError;
;extern int gMotorPos1;
;extern int gMotorPos2;
;extern BOOL gElCompletFlag;
;extern int  gElCount;
;//extern int  gReadVol;
;extern BYTE gCurMode;
;extern BOOL gReadyActionFlag;
;extern int  gVolChkCount;
;
;extern void SaveInEeprom( void );
;BYTE IPC1_RCV_MODE( LPIPC_HEADER pHead );
;BYTE IPC1_RCV_RUN( LPIPC_HEADER pHead );
;BYTE IPC1_RCV_DOSE( LPIPC_HEADER pHead );
;BYTE IPC1_RCV_VOLTAGE( LPIPC_HEADER pHead );
;BYTE IPC1_RCV_DEPTH( LPIPC_HEADER pHead );
;BYTE IPC1_RCV_SPEED( LPIPC_HEADER pHead );
;BYTE IPC1_RCV_ELCOUNT( LPIPC_HEADER pHead );
;BYTE IPC1_RCV_FLAG( LPIPC_HEADER pHead );
;BYTE IPC1_RCV_EL_MAP( LPIPC_HEADER pHead );
;BYTE IPC1_RCV_MOTOR_POS1( LPIPC_HEADER pHead );
;BYTE IPC1_RCV_MOTOR_POS2( LPIPC_HEADER pHead );
;BYTE IPC1_RCV_ERROR( LPIPC_HEADER pHead );
;typedef BYTE(*RunFun) (LPIPC_HEADER pHead );
;
;RunFun IPC1Rcvfun[]=
;{
;     IPC1_RCV_MODE,
;     IPC1_RCV_RUN,
;     IPC1_RCV_DOSE,
;     IPC1_RCV_VOLTAGE,
;     IPC1_RCV_DEPTH,
;     IPC1_RCV_SPEED,
;     IPC1_RCV_ELCOUNT,
;     IPC1_RCV_FLAG,
;     IPC1_RCV_EL_MAP,
;     IPC1_RCV_MOTOR_POS1,
;     IPC1_RCV_MOTOR_POS2,
;     IPC1_RCV_ERROR
;};

	.DSEG
;
;BYTE IPC1_RCV_MODE( LPIPC_HEADER pHead )
; 0003 003E {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0003 003F     return TRUE;
;PCODE: $0000000F VOL: 0
;	*pHead -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0003 0040 }
;PCODE: $00000013 VOL: 0
;
;BYTE IPC1_RCV_RUN( LPIPC_HEADER pHead )
; 0003 0043 {
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0003 0044    //gRunFlag =  pHead->data1;
; 0003 0045    //gRunFlag = gRunFlag?TRUE:FALSE;
; 0003 0046    BOOL mFlag =  pHead->data1? TRUE:FALSE;
; 0003 0047    if( mFlag )
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;	*pHead -> Y+1
;	mFlag -> R17
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0003 0048        SaveInEeprom();
;PCODE: $00000025 VOL: 0
; 0003 0049 
; 0003 004A    return TRUE;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0003 004B }
;PCODE: $0000002C VOL: 0
;
;BYTE IPC1_RCV_DOSE( LPIPC_HEADER pHead )
; 0003 004E {
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0003 004F    gDose = pHead->data2 | ((int)pHead->data1<<8);
;PCODE: $0000002F VOL: 0
;	*pHead -> Y+0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0003 0050    if( gDose < 0 ) gDose = 0;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0003 0051    if( gDose > 3 ) gDose = 3;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0003 0052 
; 0003 0053    return TRUE;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0003 0054 }
;PCODE: $00000046 VOL: 0
;
;BYTE IPC1_RCV_VOLTAGE( LPIPC_HEADER pHead )
; 0003 0057 {
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0003 0058    gVoltage = pHead->data1;
;PCODE: $00000049 VOL: 0
;	*pHead -> Y+0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0003 0059    if( gVoltage < 60 ) gVoltage = 60;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0003 005A    if( gVoltage > 120 ) gVoltage = 120;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0003 005B 
; 0003 005C    if( gVoltage > 50 ) LOW_VOLRY;
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0003 005D    else  HIGH_VOLRY;
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0003 005E 
; 0003 005F   // DAC7611_WriteVoltage(gVoltage);
; 0003 0060 
; 0003 0061    return TRUE;
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0003 0062 }
;PCODE: $00000067 VOL: 0
;
;BYTE IPC1_RCV_DEPTH( LPIPC_HEADER pHead )
; 0003 0065 {
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0003 0066    gDepth = pHead->data1;
;PCODE: $0000006A VOL: 0
;	*pHead -> Y+0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0003 0067    if( gDepth < 0 ) gDepth = 0;
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0003 0068    if( gDepth > 3 ) gDepth = 3;
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0003 0069 
; 0003 006A    return TRUE;
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0003 006B }
;PCODE: $0000007E VOL: 0
;
;BYTE IPC1_RCV_SPEED( LPIPC_HEADER pHead )
; 0003 006E {
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0003 006F    gSpeed = pHead->data1;
;PCODE: $00000081 VOL: 0
;	*pHead -> Y+0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0003 0070    if( gSpeed < 0 ) gSpeed = 0;
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0003 0071    if( gSpeed > 2 ) gSpeed = 2;
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0003 0072 
; 0003 0073    return TRUE;
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0003 0074 }
;PCODE: $00000095 VOL: 0
;
;BYTE IPC1_RCV_ELCOUNT( LPIPC_HEADER pHead )
; 0003 0077 {
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0003 0078    gElCount = pHead->data1;
;PCODE: $00000098 VOL: 0
;	*pHead -> Y+0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0003 0079    if( gElCount < 0 ) gElCount = 0;
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0003 007A    if( gElCount > 100 ) gElCount = 100;
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0003 007B 
; 0003 007C    return TRUE;
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0003 007D }
;PCODE: $000000AC VOL: 0
;
;BYTE IPC1_RCV_FLAG( LPIPC_HEADER pHead )
; 0003 0080 {
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0003 0081    gFlag = pHead->data2;
;PCODE: $000000AF VOL: 0
;	*pHead -> Y+0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0003 0082 
; 0003 0083    return TRUE;
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0003 0084 }
;PCODE: $000000B6 VOL: 0
;
;BYTE IPC1_RCV_EL_MAP( LPIPC_HEADER pHead )
; 0003 0087 {
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0003 0088    gElMatrix[0] = (BYTE)((pHead->data1>>4)&0xf);
;PCODE: $000000B9 VOL: 0
;	*pHead -> Y+0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0003 0089    gElMatrix[1] = (BYTE)(pHead->data1&0xf);
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0003 008A    gElMatrix[2] = (BYTE)((pHead->data2>>4)&0xf);
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0003 008B    gElMatrix[3] = (BYTE)(pHead->data2&0xf);
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
; 0003 008C 
; 0003 008D    return TRUE;
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0003 008E }
;PCODE: $000000D4 VOL: 0
;
;BYTE IPC1_RCV_MOTOR_POS1( LPIPC_HEADER pHead )
; 0003 0091 {
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0003 0092    return TRUE;
;PCODE: $000000D7 VOL: 0
;	*pHead -> Y+0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0003 0093 }
;PCODE: $000000DB VOL: 0
;
;BYTE IPC1_RCV_MOTOR_POS2( LPIPC_HEADER pHead )
; 0003 0096 {
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
; 0003 0097    return TRUE;
;PCODE: $000000DE VOL: 0
;	*pHead -> Y+0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
; 0003 0098 }
;PCODE: $000000E2 VOL: 0
;
;BYTE IPC1_RCV_ERROR( LPIPC_HEADER pHead )
; 0003 009B {
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0003 009C    BYTE mErrPos = pHead->data1;
; 0003 009D    BOOL mSetClearFlag = pHead->data2?TRUE:FALSE;
; 0003 009E 
; 0003 009F    if( mErrPos> ERROR_EM_STOP )
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;	*pHead -> Y+2
;	mErrPos -> R17
;	mSetClearFlag -> R16
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
; 0003 00A0        mErrPos = ERROR_EM_STOP;
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0003 00A1 
; 0003 00A2    if( mSetClearFlag )
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0003 00A3         gError &= ~(1<<mErrPos);
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
; 0003 00A4    else gError |= (1<<mErrPos);
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
; 0003 00A5 
; 0003 00A6    return TRUE;
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0003 00A7 }
;PCODE: $00000115 VOL: 0
;
;BYTE IPC1_SND_MODE( LPIPC_HEADER pHead );
;BYTE IPC1_SND_RUN( LPIPC_HEADER pHead );
;BYTE IPC1_SND_DOSE( LPIPC_HEADER pHead );
;BYTE IPC1_SND_VOLTAGE( LPIPC_HEADER pHead );
;BYTE IPC1_SND_DEPTH( LPIPC_HEADER pHead );
;BYTE IPC1_SND_SPEED( LPIPC_HEADER pHead );
;BYTE IPC1_SND_ELCOUNT( LPIPC_HEADER pHead );
;BYTE IPC1_SND_FLAG( LPIPC_HEADER pHead );
;BYTE IPC1_SND_EL_MAP( LPIPC_HEADER pHead );
;BYTE IPC1_SND_MOTOR_POS1( LPIPC_HEADER pHead );
;BYTE IPC1_SND_MOTOR_POS2( LPIPC_HEADER pHead );
;BYTE IPC1_SND_ERROR( LPIPC_HEADER pHead );
;typedef BYTE(*SenFun) (LPIPC_HEADER pHead);
;
;SenFun IPC1Sndfun[]=
;{
;     IPC1_SND_MODE,
;     IPC1_SND_RUN,
;     IPC1_SND_DOSE,
;     IPC1_SND_VOLTAGE,
;     IPC1_SND_DEPTH,
;     IPC1_SND_SPEED,
;     IPC1_SND_ELCOUNT,
;     IPC1_SND_FLAG,
;     IPC1_SND_EL_MAP,
;     IPC1_SND_MOTOR_POS1,
;     IPC1_SND_MOTOR_POS2,
;     IPC1_SND_ERROR
;};

	.DSEG
;
;BYTE IPC1_SND_MODE( LPIPC_HEADER pHead )
; 0003 00C8 {

	.CSEG
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
; 0003 00C9    pHead->Command = SYS_OK;
;PCODE: $00000118 VOL: 0
;	*pHead -> Y+0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0003 00CA    pHead->data1 = 0;//(BYTE)((gMode>>8)&0xff);  //
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
; 0003 00CB    pHead->data2 = (BYTE)(gMode&0xff);
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0003 00CC 
; 0003 00CD    pHead->checksum = MakeCrc( (BYTE *)pHead , sizeof( IPC_HEADER )- 2 );
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
; 0003 00CE 
; 0003 00CF    IPC_SendData1( (BYTE *)pHead, sizeof( IPC_HEADER ) );
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0003 00D0    return TRUE;
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
; 0003 00D1 }
;PCODE: $00000133 VOL: 0
;BYTE IPC1_SND_RUN( LPIPC_HEADER pHead )
; 0003 00D3 {
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
; 0003 00D4    pHead->Command = SYS_OK;
;PCODE: $00000136 VOL: 0
;	*pHead -> Y+0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
; 0003 00D5    pHead->data1 = 1;  //
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
; 0003 00D6    pHead->data2 = (BYTE)(gRunFlag&0xff);
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
; 0003 00D7 
; 0003 00D8    pHead->checksum = MakeCrc( (BYTE *)pHead , sizeof( IPC_HEADER )- 2 );
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
; 0003 00D9 
; 0003 00DA    IPC_SendData1( (BYTE *)pHead, sizeof( IPC_HEADER ) );
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
; 0003 00DB    return TRUE;
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
; 0003 00DC }
;PCODE: $00000151 VOL: 0
;
;BYTE IPC1_SND_DOSE( LPIPC_HEADER pHead )
; 0003 00DF {
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
; 0003 00E0    pHead->Command = SYS_OK;
;PCODE: $00000154 VOL: 0
;	*pHead -> Y+0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
; 0003 00E1    pHead->data1 = (BYTE)((gDose>>8)&0xff);
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
; 0003 00E2    pHead->data2 = (BYTE)(gDose&0xff);
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
; 0003 00E3 
; 0003 00E4    pHead->checksum = MakeCrc( (BYTE *)pHead , sizeof( IPC_HEADER )- 2 );
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
; 0003 00E5 
; 0003 00E6    IPC_SendData1( (BYTE *)pHead, sizeof( IPC_HEADER ) );
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
; 0003 00E7    return TRUE;
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
; 0003 00E8 }
;PCODE: $00000170 VOL: 0
;
;BYTE IPC1_SND_VOLTAGE( LPIPC_HEADER pHead )
; 0003 00EB {
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
; 0003 00EC    pHead->Command = SYS_OK;
;PCODE: $00000173 VOL: 0
;	*pHead -> Y+0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
; 0003 00ED    pHead->data1 = (BYTE)((gVoltage>>8)&0xff);  //
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
; 0003 00EE    pHead->data2 = (BYTE)(gVoltage&0xff);
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
; 0003 00EF 
; 0003 00F0    pHead->checksum = MakeCrc( (BYTE *)pHead , sizeof( IPC_HEADER )- 2 );
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
; 0003 00F1 
; 0003 00F2    IPC_SendData1( (BYTE *)pHead, sizeof( IPC_HEADER ) );
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
; 0003 00F3 
; 0003 00F4    return TRUE;
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
; 0003 00F5 }
;PCODE: $0000018F VOL: 0
;
;BYTE IPC1_SND_DEPTH( LPIPC_HEADER pHead )
; 0003 00F8 {
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
; 0003 00F9    pHead->Command = SYS_OK;
;PCODE: $00000192 VOL: 0
;	*pHead -> Y+0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
; 0003 00FA    pHead->data1 = (BYTE)((gDepth>>8)&0xff);  //
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
; 0003 00FB    pHead->data2 = (BYTE)(gDepth&0xff);
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
; 0003 00FC 
; 0003 00FD    pHead->checksum = MakeCrc( (BYTE *)pHead , sizeof( IPC_HEADER )- 2 );
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
; 0003 00FE 
; 0003 00FF    IPC_SendData1( (BYTE *)pHead, sizeof( IPC_HEADER ) );
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
; 0003 0100 
; 0003 0101    return TRUE;
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
; 0003 0102 
; 0003 0103 }
;PCODE: $000001AE VOL: 0
;
;BYTE IPC1_SND_SPEED( LPIPC_HEADER pHead )
; 0003 0106 {
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
; 0003 0107    pHead->Command = SYS_OK;
;PCODE: $000001B1 VOL: 0
;	*pHead -> Y+0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
; 0003 0108    pHead->data1 = (BYTE)((gSpeed>>8)&0xff);  //
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
; 0003 0109    pHead->data2 = (BYTE)(gSpeed&0xff);
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
; 0003 010A 
; 0003 010B    pHead->checksum = MakeCrc( (BYTE *)pHead , sizeof( IPC_HEADER )- 2 );
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
; 0003 010C 
; 0003 010D    IPC_SendData1( (BYTE *)pHead, sizeof( IPC_HEADER ) );
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
; 0003 010E    return TRUE;
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
; 0003 010F 
; 0003 0110 }
;PCODE: $000001CD VOL: 0
;
;BYTE IPC1_SND_ELCOUNT( LPIPC_HEADER pHead )
; 0003 0113 {
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
; 0003 0114    pHead->Command = SYS_OK;
;PCODE: $000001D0 VOL: 0
;	*pHead -> Y+0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
; 0003 0115    pHead->data1 = (BYTE)((gElCount>>8)&0xff);  //
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
; 0003 0116    pHead->data2 = (BYTE)(gElCount&0xff);
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
; 0003 0117 
; 0003 0118    pHead->checksum = MakeCrc( (BYTE *)pHead , sizeof( IPC_HEADER )- 2 );
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
; 0003 0119 
; 0003 011A    IPC_SendData1( (BYTE *)pHead, sizeof( IPC_HEADER ) );
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
; 0003 011B    return TRUE;
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
; 0003 011C }
;PCODE: $000001EC VOL: 0
;
;BYTE IPC1_SND_FLAG( LPIPC_HEADER pHead )
; 0003 011F {
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
; 0003 0120    pHead->Command = SYS_OK;
;PCODE: $000001EF VOL: 0
;	*pHead -> Y+0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
; 0003 0121    pHead->data1 = (BYTE)(gRunFlag&0xff);
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
; 0003 0122    pHead->data2 = (BYTE)(gFlag&0xff);
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
; 0003 0123 
; 0003 0124    pHead->checksum = MakeCrc( (BYTE *)pHead , sizeof( IPC_HEADER )- 2 );
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
; 0003 0125 
; 0003 0126    IPC_SendData1( (BYTE *)pHead, sizeof( IPC_HEADER ) );
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
; 0003 0127 
; 0003 0128    return TRUE;
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
; 0003 0129 
; 0003 012A }
;PCODE: $0000020A VOL: 0
;
;BYTE IPC1_SND_EL_MAP( LPIPC_HEADER pHead )
; 0003 012D {
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
; 0003 012E    pHead->Command = SYS_OK;
;PCODE: $0000020D VOL: 0
;	*pHead -> Y+0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
; 0003 012F    pHead->data1  = (gElMatrix[0]&0x0f)<<4 | (gElMatrix[1]&0x0f);
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
; 0003 0130    pHead->data2  = (gElMatrix[2]&0x0f)<<4 | (gElMatrix[3]&0x0f);
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
; 0003 0131 
; 0003 0132    pHead->checksum = MakeCrc( (BYTE *)pHead , sizeof( IPC_HEADER )- 2 );
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
; 0003 0133 
; 0003 0134    IPC_SendData1( (BYTE *)pHead, sizeof( IPC_HEADER ) );
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
; 0003 0135 
; 0003 0136    return TRUE;
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
; 0003 0137 }
;PCODE: $00000235 VOL: 0
;
;BYTE IPC1_SND_MOTOR_POS1( LPIPC_HEADER pHead )
; 0003 013A {
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
; 0003 013B    pHead->Command = SYS_OK;
;PCODE: $00000238 VOL: 0
;	*pHead -> Y+0
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
; 0003 013C    pHead->data1  = (BYTE)((gMotorPos1>>8)&0xff);
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
; 0003 013D    pHead->data2  = (BYTE)(gMotorPos1&0xff);
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
; 0003 013E 
; 0003 013F    pHead->checksum = MakeCrc( (BYTE *)pHead , sizeof( IPC_HEADER )- 2 );
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
; 0003 0140 
; 0003 0141    IPC_SendData1( (BYTE *)pHead, sizeof( IPC_HEADER ) );
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
; 0003 0142 
; 0003 0143    return TRUE;
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
; 0003 0144 
; 0003 0145 }
;PCODE: $00000254 VOL: 0
;
;BYTE IPC1_SND_MOTOR_POS2( LPIPC_HEADER pHead )
; 0003 0148 {
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
; 0003 0149    pHead->Command = SYS_OK;
;PCODE: $00000257 VOL: 0
;	*pHead -> Y+0
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
; 0003 014A    pHead->data1  = (BYTE)((gMotorPos2>>8)&0xff);
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
; 0003 014B    pHead->data2  = (BYTE)(gMotorPos2&0xff);
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
; 0003 014C 
; 0003 014D    pHead->checksum = MakeCrc( (BYTE *)pHead , sizeof( IPC_HEADER )- 2 );
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
; 0003 014E 
; 0003 014F    IPC_SendData1( (BYTE *)pHead, sizeof( IPC_HEADER ) );
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
; 0003 0150 
; 0003 0151    return TRUE;
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
; 0003 0152 
; 0003 0153 }
;PCODE: $00000273 VOL: 0
;
;BYTE IPC1_SND_ERROR( LPIPC_HEADER pHead )
; 0003 0156 {
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
; 0003 0157 
; 0003 0158    pHead->Command = SYS_OK;
;PCODE: $00000276 VOL: 0
;	*pHead -> Y+0
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
; 0003 0159    pHead->data1 = 0;
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0
; 0003 015A    pHead->data2 = gError;;
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
; 0003 015B 
; 0003 015C    pHead->checksum = MakeCrc( (BYTE *)pHead , sizeof( IPC_HEADER )- 2 );
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
; 0003 015D 
; 0003 015E    IPC_SendData1( (BYTE *)pHead, sizeof( IPC_HEADER ) );
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
; 0003 015F 
; 0003 0160    gReadyActionFlag=TRUE;
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
; 0003 0161    return TRUE;
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
; 0003 0162 
; 0003 0163 }
;PCODE: $00000292 VOL: 0
;
;BYTE MakeCrc( BYTE *Data, int Len )
; 0003 0166 {
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
; 0003 0167      int i;
; 0003 0168      BYTE CRC;
; 0003 0169 
; 0003 016A      CRC = 0;
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
;	*Data -> Y+6
;	Len -> Y+4
;	i -> R16,R17
;	CRC -> R19
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
; 0003 016B 
; 0003 016C      for( i=0; i<Len ; i++ )
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
;PCODE: $000002A1 VOL: 0
; 0003 016D           CRC += Data[i];
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
; 0003 016F return CRC;
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
; 0003 0170 }
;PCODE: $000002B1 VOL: 0
;
;void IPC_RunProcess1( void )
; 0003 0173 {
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
; 0003 0174      BYTE RcvHead[30];
; 0003 0175      BYTE RcvByte;
; 0003 0176      BYTE  Crc,RcvCrc;
; 0003 0177      LPIPC_HEADER pHead;
; 0003 0178 
; 0003 0179   //   while( TRUE )
; 0003 017A      {
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
;	RcvHead -> Y+6
;	RcvByte -> R17
;	Crc -> R16
;	RcvCrc -> R19
;	*pHead -> R20,R21
; 0003 017B         RcvByte = IPC_RcvData_Interrupt1( RcvHead, sizeof( IPC_HEADER ) );
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
; 0003 017C         pHead = ( LPIPC_HEADER )RcvHead;
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
; 0003 017D 
; 0003 017E          Crc =  MakeCrc(  RcvHead , sizeof( IPC_HEADER )- 2 );
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
; 0003 017F          RcvCrc = pHead->checksum;
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
; 0003 0180 
; 0003 0181          if(  RcvByte == sizeof( IPC_HEADER ) && RcvCrc == Crc &&
; 0003 0182               pHead->stx == 0x02 && pHead->etx == 0x03 )
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
; 0003 0183          {
; 0003 0184               if( pHead->RWflag ==  IPC_MODE_READ )
;PCODE: $000002D8 VOL: 0
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
; 0003 0185                    IPC_SndProcess1( RcvHead );
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
; 0003 0186               else IPC_RcvProcess1( RcvHead );
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
; 0003 0187 
; 0003 0188           }
;PCODE: $000002E2 VOL: 0
; 0003 0189           else
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
; 0003 018A           {
; 0003 018B              IPC_Send_Response1( RcvHead, SYS_ERROR);
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
;PCODE: $000002E7 VOL: 0
;PCODE: $000002E8 VOL: 0
; 0003 018C              IPC_ResetCount1();
;PCODE: $000002E9 VOL: 0
; 0003 018D           }
;PCODE: $000002EA VOL: 0
; 0003 018E 
; 0003 018F      }
; 0003 0190 
; 0003 0191 }
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
; void IPC_Send_Response1( BYTE *Data, BYTE Res )
; 0003 0193 {
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
; 0003 0194      LPIPC_HEADER mLpHead;
; 0003 0195 
; 0003 0196      mLpHead = (LPIPC_HEADER)Data;
;PCODE: $000002F1 VOL: 0
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
;	*Data -> Y+3
;	Res -> Y+2
;	*mLpHead -> R16,R17
;PCODE: $000002F4 VOL: 0
;PCODE: $000002F5 VOL: 0
; 0003 0197 
; 0003 0198      mLpHead->Command = Res;
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
;PCODE: $000002F8 VOL: 0
; 0003 0199      mLpHead->data1 = 0;
;PCODE: $000002F9 VOL: 0
;PCODE: $000002FA VOL: 0
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
; 0003 019A      mLpHead->data2 = 0;
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
; 0003 019B      mLpHead-> checksum = MakeCrc( (BYTE *)mLpHead , sizeof( IPC_HEADER )- 2 );
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
; 0003 019C 
; 0003 019D      IPC_SendData1( Data, sizeof( IPC_HEADER ) );
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
; 0003 019E }
;PCODE: $0000030B VOL: 0
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
;
;void IPC_RcvProcess1( BYTE *Data )
; 0003 01A1 {
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
; 0003 01A2       LPIPC_HEADER pHead;
; 0003 01A3 
; 0003 01A4       pHead   = (LPIPC_HEADER)Data;
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
;	*Data -> Y+2
;	*pHead -> R16,R17
;PCODE: $00000317 VOL: 0
;PCODE: $00000318 VOL: 0
; 0003 01A5       if(  pHead->Command < sizeof(IPC1Rcvfun)/2 )
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
;PCODE: $0000031B VOL: 0
;PCODE: $0000031C VOL: 0
; 0003 01A6       {
; 0003 01A7              if( IPC1Rcvfun[pHead->Command]( pHead ) == TRUE )        //  Run Command
;PCODE: $0000031D VOL: 0
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
;PCODE: $00000320 VOL: 0
;PCODE: $00000321 VOL: 0
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
;PCODE: $00000324 VOL: 0
;PCODE: $00000325 VOL: 0
;PCODE: $00000326 VOL: 0
;PCODE: $00000327 VOL: 0
;PCODE: $00000328 VOL: 0
;PCODE: $00000329 VOL: 0
; 0003 01A8              {
; 0003 01A9                  IPC_Send_Response1( Data, SYS_OK );
;PCODE: $0000032A VOL: 0
;PCODE: $0000032B VOL: 0
;PCODE: $0000032C VOL: 0
;PCODE: $0000032D VOL: 0
; 0003 01AA              }
; 0003 01AB              else
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0
; 0003 01AC              {
; 0003 01AD                  IPC_Send_Response1( Data, SYS_ERROR);
;PCODE: $00000330 VOL: 0
;PCODE: $00000331 VOL: 0
;PCODE: $00000332 VOL: 0
;PCODE: $00000333 VOL: 0
; 0003 01AE               }
;PCODE: $00000334 VOL: 0
; 0003 01AF        }
; 0003 01B0        else
;PCODE: $00000335 VOL: 0
;PCODE: $00000336 VOL: 0
; 0003 01B1        {
; 0003 01B2            IPC_Send_Response1( Data, SYS_ERROR );
;PCODE: $00000337 VOL: 0
;PCODE: $00000338 VOL: 0
;PCODE: $00000339 VOL: 0
;PCODE: $0000033A VOL: 0
; 0003 01B3         }
;PCODE: $0000033B VOL: 0
; 0003 01B4 
; 0003 01B5 }
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
;PCODE: $0000033E VOL: 0
;PCODE: $0000033F VOL: 0
;PCODE: $00000340 VOL: 0
;PCODE: $00000341 VOL: 0
;PCODE: $00000342 VOL: 0
;
;
;void IPC_SndProcess1( BYTE *Data )
; 0003 01B9 {
;PCODE: $00000343 VOL: 0
;PCODE: $00000344 VOL: 0
; 0003 01BA       LPIPC_HEADER pHead;
; 0003 01BB 
; 0003 01BC       pHead = (LPIPC_HEADER)Data;
;PCODE: $00000345 VOL: 0
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
;	*Data -> Y+2
;	*pHead -> R16,R17
;PCODE: $00000348 VOL: 0
;PCODE: $00000349 VOL: 0
; 0003 01BD       if(   pHead->Command < sizeof(IPC1Sndfun)/2  )
;PCODE: $0000034A VOL: 0
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
;PCODE: $0000034D VOL: 0
; 0003 01BE       {
; 0003 01BF           if( IPC1Sndfun[pHead->Command]( pHead ) == FALSE )        //  Run Command
;PCODE: $0000034E VOL: 0
;PCODE: $0000034F VOL: 0
;PCODE: $00000350 VOL: 0
;PCODE: $00000351 VOL: 0
;PCODE: $00000352 VOL: 0
;PCODE: $00000353 VOL: 0
;PCODE: $00000354 VOL: 0
;PCODE: $00000355 VOL: 0
;PCODE: $00000356 VOL: 0
;PCODE: $00000357 VOL: 0
;PCODE: $00000358 VOL: 0
;PCODE: $00000359 VOL: 0
;PCODE: $0000035A VOL: 0
; 0003 01C0               IPC_Send_Response1( Data, SYS_ERROR );
;PCODE: $0000035B VOL: 0
;PCODE: $0000035C VOL: 0
;PCODE: $0000035D VOL: 0
;PCODE: $0000035E VOL: 0
; 0003 01C1       }
;PCODE: $0000035F VOL: 0
; 0003 01C2       else
;PCODE: $00000360 VOL: 0
;PCODE: $00000361 VOL: 0
; 0003 01C3       {
; 0003 01C4            IPC_Send_Response1( Data, SYS_ERROR );
;PCODE: $00000362 VOL: 0
;PCODE: $00000363 VOL: 0
;PCODE: $00000364 VOL: 0
;PCODE: $00000365 VOL: 0
; 0003 01C5       }
;PCODE: $00000366 VOL: 0
; 0003 01C6 }
;PCODE: $00000367 VOL: 0
;PCODE: $00000368 VOL: 0
;PCODE: $00000369 VOL: 0
;PCODE: $0000036A VOL: 0
;PCODE: $0000036B VOL: 0
;PCODE: $0000036C VOL: 0
;PCODE: $0000036D VOL: 0
;
;
;BYTE IPC0_RCV_MODE( LPIPC_HEADER pHead );
;BYTE IPC0_RCV_RUN( LPIPC_HEADER pHead );
;BYTE IPC0_RCV_DOSE( LPIPC_HEADER pHead );
;BYTE IPC0_RCV_VOLTAGE( LPIPC_HEADER pHead );
;BYTE IPC0_RCV_DEPTH( LPIPC_HEADER pHead );
;BYTE IPC0_RCV_SPEED( LPIPC_HEADER pHead );
;BYTE IPC0_RCV_ELCOUNT( LPIPC_HEADER pHead );
;BYTE IPC0_RCV_FLAG( LPIPC_HEADER pHead );
;BYTE IPC0_RCV_EL_MAP( LPIPC_HEADER pHead );
;BYTE IPC0_RCV_MOTOR_POS1( LPIPC_HEADER pHead );
;BYTE IPC0_RCV_MOTOR_POS2( LPIPC_HEADER pHead );
;BYTE IPC0_RCV_ERROR( LPIPC_HEADER pHead );
;//typedef BYTE(*RunFun) (LPIPC_HEADER pHead );
;
;RunFun IPC0Rcvfun[]=
;{
;     IPC0_RCV_MODE,
;     IPC0_RCV_RUN,
;     IPC0_RCV_DOSE,
;     IPC0_RCV_VOLTAGE,
;     IPC0_RCV_DEPTH,
;     IPC0_RCV_SPEED,
;     IPC0_RCV_ELCOUNT,
;     IPC0_RCV_FLAG,
;     IPC0_RCV_EL_MAP,
;     IPC0_RCV_MOTOR_POS1,
;     IPC0_RCV_MOTOR_POS2,
;     IPC0_RCV_ERROR
;};

	.DSEG
;
;BYTE IPC0_RCV_MODE( LPIPC_HEADER pHead )
; 0003 01E8 {

	.CSEG
;PCODE: $0000036E VOL: 0
;PCODE: $0000036F VOL: 0
; 0003 01E9    gMode = pHead->data2;
;PCODE: $00000370 VOL: 0
;	*pHead -> Y+0
;PCODE: $00000371 VOL: 0
;PCODE: $00000372 VOL: 0
;PCODE: $00000373 VOL: 0
; 0003 01EA 
; 0003 01EB    if( gMode == MODE_READY ) //ready
;PCODE: $00000374 VOL: 0
;PCODE: $00000375 VOL: 0
;PCODE: $00000376 VOL: 0
; 0003 01EC    {
; 0003 01ED       //gElCount = 0;
; 0003 01EE       PORTC = 0x00;
;PCODE: $00000377 VOL: 0
;PCODE: $00000378 VOL: 0
; 0003 01EF       HIGH_PWM;
;PCODE: $00000379 VOL: 0
;PCODE: $0000037A VOL: 0
;PCODE: $0000037B VOL: 0
; 0003 01F0       DAC7611_WriteVoltage(gVoltage);
;PCODE: $0000037C VOL: 0
;PCODE: $0000037D VOL: 0
; 0003 01F1       HIGH_OUTRY;
;PCODE: $0000037E VOL: 0
;PCODE: $0000037F VOL: 0
;PCODE: $00000380 VOL: 0
; 0003 01F2 
; 0003 01F3       gError = ERROR_NO;
;PCODE: $00000381 VOL: 0
;PCODE: $00000382 VOL: 0
; 0003 01F4       gFlag = FLAG_VOLADJ;
;PCODE: $00000383 VOL: 0
;PCODE: $00000384 VOL: 0
; 0003 01F5 
; 0003 01F6       gVolChkCount = 2;
;PCODE: $00000385 VOL: 0
;PCODE: $00000386 VOL: 0
; 0003 01F7 
; 0003 01F8       //LOW_COMPLETE_LED;
; 0003 01F9       //LOW_WARRING_LED;
; 0003 01FA    }
; 0003 01FB    else //if( gMode == MODE_STOP )
;PCODE: $00000387 VOL: 0
;PCODE: $00000388 VOL: 0
; 0003 01FC    {
; 0003 01FD        PORTC = 0x00;
;PCODE: $00000389 VOL: 0
;PCODE: $0000038A VOL: 0
; 0003 01FE        DAC7611_WriteVoltage(0);
;PCODE: $0000038B VOL: 0
;PCODE: $0000038C VOL: 0
;PCODE: $0000038D VOL: 0
; 0003 01FF        LOW_PWM;
;PCODE: $0000038E VOL: 0
;PCODE: $0000038F VOL: 0
;PCODE: $00000390 VOL: 0
; 0003 0200        LOW_OUTRY;
;PCODE: $00000391 VOL: 0
;PCODE: $00000392 VOL: 0
;PCODE: $00000393 VOL: 0
; 0003 0201       // gError = ERROR_NO;
; 0003 0202        gFlag = FLAG_STADNBY;
;PCODE: $00000394 VOL: 0
;PCODE: $00000395 VOL: 0
; 0003 0203 
; 0003 0204       // LOW_COMPLETE_LED;
; 0003 0205       //LOW_WARRING_LED;
; 0003 0206    }
;PCODE: $00000396 VOL: 0
; 0003 0207 
; 0003 0208    gRunFlag = FALSE;
;PCODE: $00000397 VOL: 0
;PCODE: $00000398 VOL: 0
; 0003 0209    gElCompletFlag = FALSE;
;PCODE: $00000399 VOL: 0
;PCODE: $0000039A VOL: 0
; 0003 020A    return TRUE;
;PCODE: $0000039B VOL: 0
;PCODE: $0000039C VOL: 0
;PCODE: $0000039D VOL: 0
; 0003 020B }
;PCODE: $0000039E VOL: 0
;
;BYTE IPC0_RCV_RUN( LPIPC_HEADER pHead )
; 0003 020E {
;PCODE: $0000039F VOL: 0
;PCODE: $000003A0 VOL: 0
; 0003 020F    if( gFlag == FLAG_SHOOTING ) //ready
;PCODE: $000003A1 VOL: 0
;	*pHead -> Y+0
;PCODE: $000003A2 VOL: 0
;PCODE: $000003A3 VOL: 0
;PCODE: $000003A4 VOL: 0
; 0003 0210    {
; 0003 0211       // HIGH_SH;
; 0003 0212        gRunFlag = pHead->data2?TRUE:FALSE;
;PCODE: $000003A5 VOL: 0
;PCODE: $000003A6 VOL: 0
;PCODE: $000003A7 VOL: 0
;PCODE: $000003A8 VOL: 0
;PCODE: $000003A9 VOL: 0
;PCODE: $000003AA VOL: 0
;PCODE: $000003AB VOL: 0
;PCODE: $000003AC VOL: 0
;PCODE: $000003AD VOL: 0
;PCODE: $000003AE VOL: 0
;PCODE: $000003AF VOL: 0
; 0003 0213 
; 0003 0214        gElCompletFlag = FALSE;
;PCODE: $000003B0 VOL: 0
;PCODE: $000003B1 VOL: 0
; 0003 0215        LOW_SH;
;PCODE: $000003B2 VOL: 0
;PCODE: $000003B3 VOL: 0
; 0003 0216    }
; 0003 0217    else
;PCODE: $000003B4 VOL: 0
;PCODE: $000003B5 VOL: 0
; 0003 0218    {
; 0003 0219        PORTC = 0x00;
;PCODE: $000003B6 VOL: 0
;PCODE: $000003B7 VOL: 0
; 0003 021A        DAC7611_WriteVoltage(0);
;PCODE: $000003B8 VOL: 0
;PCODE: $000003B9 VOL: 0
;PCODE: $000003BA VOL: 0
; 0003 021B        LOW_PWM;
;PCODE: $000003BB VOL: 0
;PCODE: $000003BC VOL: 0
;PCODE: $000003BD VOL: 0
; 0003 021C        LOW_OUTRY;
;PCODE: $000003BE VOL: 0
;PCODE: $000003BF VOL: 0
;PCODE: $000003C0 VOL: 0
; 0003 021D       // gError = ERROR_NO;
; 0003 021E        gFlag = FLAG_STADNBY;
;PCODE: $000003C1 VOL: 0
;PCODE: $000003C2 VOL: 0
; 0003 021F    }
;PCODE: $000003C3 VOL: 0
; 0003 0220    return TRUE;
;PCODE: $000003C4 VOL: 0
;PCODE: $000003C5 VOL: 0
;PCODE: $000003C6 VOL: 0
; 0003 0221 }
;PCODE: $000003C7 VOL: 0
;
;BYTE IPC0_RCV_DOSE( LPIPC_HEADER pHead )
; 0003 0224 {
;PCODE: $000003C8 VOL: 0
;PCODE: $000003C9 VOL: 0
; 0003 0225 
; 0003 0226    return TRUE;
;PCODE: $000003CA VOL: 0
;	*pHead -> Y+0
;PCODE: $000003CB VOL: 0
;PCODE: $000003CC VOL: 0
;PCODE: $000003CD VOL: 0
; 0003 0227 }
;PCODE: $000003CE VOL: 0
;
;BYTE IPC0_RCV_VOLTAGE( LPIPC_HEADER pHead )
; 0003 022A {
;PCODE: $000003CF VOL: 0
;PCODE: $000003D0 VOL: 0
; 0003 022B    return TRUE;
;PCODE: $000003D1 VOL: 0
;	*pHead -> Y+0
;PCODE: $000003D2 VOL: 0
;PCODE: $000003D3 VOL: 0
;PCODE: $000003D4 VOL: 0
; 0003 022C }
;PCODE: $000003D5 VOL: 0
;
;BYTE IPC0_RCV_DEPTH( LPIPC_HEADER pHead )
; 0003 022F {
;PCODE: $000003D6 VOL: 0
;PCODE: $000003D7 VOL: 0
; 0003 0230    return TRUE;
;PCODE: $000003D8 VOL: 0
;	*pHead -> Y+0
;PCODE: $000003D9 VOL: 0
;PCODE: $000003DA VOL: 0
;PCODE: $000003DB VOL: 0
; 0003 0231 }
;PCODE: $000003DC VOL: 0
;BYTE IPC0_RCV_SPEED( LPIPC_HEADER pHead )
; 0003 0233 {
;PCODE: $000003DD VOL: 0
;PCODE: $000003DE VOL: 0
; 0003 0234    return TRUE;
;PCODE: $000003DF VOL: 0
;	*pHead -> Y+0
;PCODE: $000003E0 VOL: 0
;PCODE: $000003E1 VOL: 0
;PCODE: $000003E2 VOL: 0
; 0003 0235 }
;PCODE: $000003E3 VOL: 0
;BYTE IPC0_RCV_ELCOUNT( LPIPC_HEADER pHead )
; 0003 0237 {
;PCODE: $000003E4 VOL: 0
;PCODE: $000003E5 VOL: 0
; 0003 0238    return TRUE;
;PCODE: $000003E6 VOL: 0
;	*pHead -> Y+0
;PCODE: $000003E7 VOL: 0
;PCODE: $000003E8 VOL: 0
;PCODE: $000003E9 VOL: 0
; 0003 0239 }
;PCODE: $000003EA VOL: 0
;
; BYTE IPC0_RCV_FLAG( LPIPC_HEADER pHead )
; 0003 023C {
;PCODE: $000003EB VOL: 0
;PCODE: $000003EC VOL: 0
; 0003 023D    BYTE mFlag;
; 0003 023E    mFlag = pHead->data2;
;PCODE: $000003ED VOL: 0
;PCODE: $000003EE VOL: 0
;	*pHead -> Y+1
;	mFlag -> R17
;PCODE: $000003EF VOL: 0
;PCODE: $000003F0 VOL: 0
;PCODE: $000003F1 VOL: 0
; 0003 023F 
; 0003 0240    if( mFlag > FLAG_EM_STOP)
;PCODE: $000003F2 VOL: 0
;PCODE: $000003F3 VOL: 0
;PCODE: $000003F4 VOL: 0
; 0003 0241        gFlag = FLAG_EM_STOP;
;PCODE: $000003F5 VOL: 0
;PCODE: $000003F6 VOL: 0
; 0003 0242    else gFlag = mFlag;
;PCODE: $000003F7 VOL: 0
;PCODE: $000003F8 VOL: 0
;PCODE: $000003F9 VOL: 0
;PCODE: $000003FA VOL: 0
; 0003 0243 
; 0003 0244    return TRUE;
;PCODE: $000003FB VOL: 0
;PCODE: $000003FC VOL: 0
;PCODE: $000003FD VOL: 0
;PCODE: $000003FE VOL: 0
;PCODE: $000003FF VOL: 0
;PCODE: $00000400 VOL: 0
; 0003 0245 }
;PCODE: $00000401 VOL: 0
;BYTE IPC0_RCV_EL_MAP( LPIPC_HEADER pHead )
; 0003 0247 {
;PCODE: $00000402 VOL: 0
;PCODE: $00000403 VOL: 0
; 0003 0248    return TRUE;
;PCODE: $00000404 VOL: 0
;	*pHead -> Y+0
;PCODE: $00000405 VOL: 0
;PCODE: $00000406 VOL: 0
;PCODE: $00000407 VOL: 0
; 0003 0249 }
;PCODE: $00000408 VOL: 0
;
;BYTE IPC0_RCV_MOTOR_POS1( LPIPC_HEADER pHead )
; 0003 024C {
;PCODE: $00000409 VOL: 0
;PCODE: $0000040A VOL: 0
; 0003 024D    WORD temp;
; 0003 024E    temp = ((WORD)pHead->data1)<<8|pHead->data2;
;PCODE: $0000040B VOL: 0
;PCODE: $0000040C VOL: 0
;PCODE: $0000040D VOL: 0
;	*pHead -> Y+2
;	temp -> R16,R17
;PCODE: $0000040E VOL: 0
;PCODE: $0000040F VOL: 0
;PCODE: $00000410 VOL: 0
;PCODE: $00000411 VOL: 0
;PCODE: $00000412 VOL: 0
;PCODE: $00000413 VOL: 0
;PCODE: $00000414 VOL: 0
;PCODE: $00000415 VOL: 0
;PCODE: $00000416 VOL: 0
; 0003 024F    gMotorPos1 = temp;
;PCODE: $00000417 VOL: 0
;PCODE: $00000418 VOL: 0
; 0003 0250 
; 0003 0251    return TRUE;
;PCODE: $00000419 VOL: 0
;PCODE: $0000041A VOL: 0
;PCODE: $0000041B VOL: 0
;PCODE: $0000041C VOL: 0
;PCODE: $0000041D VOL: 0
;PCODE: $0000041E VOL: 0
;PCODE: $0000041F VOL: 0
; 0003 0252 }
;PCODE: $00000420 VOL: 0
;
;BYTE IPC0_RCV_MOTOR_POS2( LPIPC_HEADER pHead )
; 0003 0255 {
;PCODE: $00000421 VOL: 0
;PCODE: $00000422 VOL: 0
; 0003 0256    WORD temp;
; 0003 0257    temp = ((WORD)pHead->data1)<<8|pHead->data2;
;PCODE: $00000423 VOL: 0
;PCODE: $00000424 VOL: 0
;PCODE: $00000425 VOL: 0
;	*pHead -> Y+2
;	temp -> R16,R17
;PCODE: $00000426 VOL: 0
;PCODE: $00000427 VOL: 0
;PCODE: $00000428 VOL: 0
;PCODE: $00000429 VOL: 0
;PCODE: $0000042A VOL: 0
;PCODE: $0000042B VOL: 0
;PCODE: $0000042C VOL: 0
;PCODE: $0000042D VOL: 0
;PCODE: $0000042E VOL: 0
; 0003 0258    gMotorPos2 = temp;
;PCODE: $0000042F VOL: 0
;PCODE: $00000430 VOL: 0
; 0003 0259 
; 0003 025A    return TRUE;
;PCODE: $00000431 VOL: 0
;PCODE: $00000432 VOL: 0
;PCODE: $00000433 VOL: 0
;PCODE: $00000434 VOL: 0
;PCODE: $00000435 VOL: 0
;PCODE: $00000436 VOL: 0
;PCODE: $00000437 VOL: 0
; 0003 025B }
;PCODE: $00000438 VOL: 0
;
;BYTE IPC0_RCV_ERROR( LPIPC_HEADER pHead )
; 0003 025E {
;PCODE: $00000439 VOL: 0
;PCODE: $0000043A VOL: 0
; 0003 025F    BYTE mErrPos = pHead->data1;
; 0003 0260 
; 0003 0261    if( mErrPos> ERROR_EM_STOP )
;PCODE: $0000043B VOL: 0
;PCODE: $0000043C VOL: 0
;	*pHead -> Y+1
;	mErrPos -> R17
;PCODE: $0000043D VOL: 0
;PCODE: $0000043E VOL: 0
;PCODE: $0000043F VOL: 0
;PCODE: $00000440 VOL: 0
;PCODE: $00000441 VOL: 0
;PCODE: $00000442 VOL: 0
; 0003 0262        mErrPos = ERROR_EM_STOP;
;PCODE: $00000443 VOL: 0
;PCODE: $00000444 VOL: 0
; 0003 0263 
; 0003 0264    if( mErrPos == ERROR_EM_STOP )  //2021-01-12
;PCODE: $00000445 VOL: 0
;PCODE: $00000446 VOL: 0
;PCODE: $00000447 VOL: 0
;PCODE: $00000448 VOL: 0
; 0003 0265       gFlag = FLAG_EM_STOP;
;PCODE: $00000449 VOL: 0
;PCODE: $0000044A VOL: 0
; 0003 0266 
; 0003 0267    gError |= (1<<mErrPos);
;PCODE: $0000044B VOL: 0
;PCODE: $0000044C VOL: 0
;PCODE: $0000044D VOL: 0
;PCODE: $0000044E VOL: 0
;PCODE: $0000044F VOL: 0
;PCODE: $00000450 VOL: 0
;PCODE: $00000451 VOL: 0
; 0003 0268 
; 0003 0269    gCurMode = CUR_ERROR;
;PCODE: $00000452 VOL: 0
;PCODE: $00000453 VOL: 0
; 0003 026A 
; 0003 026B    return TRUE;
;PCODE: $00000454 VOL: 0
;PCODE: $00000455 VOL: 0
;PCODE: $00000456 VOL: 0
;PCODE: $00000457 VOL: 0
;PCODE: $00000458 VOL: 0
; 0003 026C }
;PCODE: $00000459 VOL: 0
;BYTE IPC0_SND_MODE( LPIPC_HEADER pHead );
;BYTE IPC0_SND_RUN( LPIPC_HEADER pHead );
;BYTE IPC0_SND_DOSE( LPIPC_HEADER pHead );
;BYTE IPC0_SND_VOLTAGE( LPIPC_HEADER pHead );
;BYTE IPC0_SND_DEPTH( LPIPC_HEADER pHead );
;BYTE IPC0_SND_SPEED( LPIPC_HEADER pHead );
;BYTE IPC0_SND_ELCOUNT( LPIPC_HEADER pHead );
;BYTE IPC0_SND_FLAG( LPIPC_HEADER pHead );
;BYTE IPC0_SND_EL_MAP( LPIPC_HEADER pHead );
;BYTE IPC0_SND_MOTOR_POS1( LPIPC_HEADER pHead );
;BYTE IPC0_SND_MOTOR_POS2( LPIPC_HEADER pHead );
;BYTE IPC0_SND_ERROR( LPIPC_HEADER pHead );
;//typedef BYTE(*SenFun) (LPIPC_HEADER pHead);
;
;SenFun IPC0Sndfun[]=
;{
;     IPC0_SND_MODE,
;     IPC0_SND_RUN,
;     IPC0_SND_DOSE,
;     IPC0_SND_VOLTAGE,
;     IPC0_SND_DEPTH,
;     IPC0_SND_SPEED,
;     IPC0_SND_ELCOUNT,
;     IPC0_SND_FLAG,
;     IPC0_SND_EL_MAP,
;     IPC0_SND_MOTOR_POS1,
;     IPC0_SND_MOTOR_POS2,
;     IPC0_SND_ERROR
;};

	.DSEG
;
;BYTE IPC0_SND_MODE( LPIPC_HEADER pHead )
; 0003 028C {

	.CSEG
;PCODE: $0000045A VOL: 0
;PCODE: $0000045B VOL: 0
; 0003 028D    pHead->Command = SYS_OK;
;PCODE: $0000045C VOL: 0
;	*pHead -> Y+0
;PCODE: $0000045D VOL: 0
;PCODE: $0000045E VOL: 0
;PCODE: $0000045F VOL: 0
;PCODE: $00000460 VOL: 0
; 0003 028E    pHead->data1 = 1;//(BYTE)((gMode>>8)&0xff);  //
;PCODE: $00000461 VOL: 0
;PCODE: $00000462 VOL: 0
;PCODE: $00000463 VOL: 0
;PCODE: $00000464 VOL: 0
; 0003 028F    pHead->data2 =  (BYTE)(gMode&0xff);
;PCODE: $00000465 VOL: 0
;PCODE: $00000466 VOL: 0
;PCODE: $00000467 VOL: 0
;PCODE: $00000468 VOL: 0
; 0003 0290 
; 0003 0291    pHead->checksum = MakeCrc( (BYTE *)pHead , sizeof( IPC_HEADER )- 2 );
;PCODE: $00000469 VOL: 0
;PCODE: $0000046A VOL: 0
;PCODE: $0000046B VOL: 0
;PCODE: $0000046C VOL: 0
;PCODE: $0000046D VOL: 0
;PCODE: $0000046E VOL: 0
;PCODE: $0000046F VOL: 0
; 0003 0292 
; 0003 0293    IPC_SendData0( (BYTE *)pHead, sizeof( IPC_HEADER ) );
;PCODE: $00000470 VOL: 0
;PCODE: $00000471 VOL: 0
;PCODE: $00000472 VOL: 0
;PCODE: $00000473 VOL: 0
; 0003 0294    return TRUE;
;PCODE: $00000474 VOL: 0
;PCODE: $00000475 VOL: 0
;PCODE: $00000476 VOL: 0
; 0003 0295 }
;PCODE: $00000477 VOL: 0
;
;BYTE IPC0_SND_RUN( LPIPC_HEADER pHead )
; 0003 0298 {
;PCODE: $00000478 VOL: 0
;PCODE: $00000479 VOL: 0
; 0003 0299    pHead->Command = SYS_OK;
;PCODE: $0000047A VOL: 0
;	*pHead -> Y+0
;PCODE: $0000047B VOL: 0
;PCODE: $0000047C VOL: 0
;PCODE: $0000047D VOL: 0
;PCODE: $0000047E VOL: 0
; 0003 029A    pHead->data1 = 1;//(BYTE)((gRunFlag>>8)&0xff);  //
;PCODE: $0000047F VOL: 0
;PCODE: $00000480 VOL: 0
;PCODE: $00000481 VOL: 0
;PCODE: $00000482 VOL: 0
; 0003 029B    pHead->data2 = (BYTE)(gRunFlag&0xff);
;PCODE: $00000483 VOL: 0
;PCODE: $00000484 VOL: 0
;PCODE: $00000485 VOL: 0
;PCODE: $00000486 VOL: 0
; 0003 029C 
; 0003 029D    pHead->checksum = MakeCrc( (BYTE *)pHead , sizeof( IPC_HEADER )- 2 );
;PCODE: $00000487 VOL: 0
;PCODE: $00000488 VOL: 0
;PCODE: $00000489 VOL: 0
;PCODE: $0000048A VOL: 0
;PCODE: $0000048B VOL: 0
;PCODE: $0000048C VOL: 0
;PCODE: $0000048D VOL: 0
; 0003 029E 
; 0003 029F    IPC_SendData0( (BYTE *)pHead, sizeof( IPC_HEADER ) );
;PCODE: $0000048E VOL: 0
;PCODE: $0000048F VOL: 0
;PCODE: $00000490 VOL: 0
;PCODE: $00000491 VOL: 0
; 0003 02A0    return TRUE;
;PCODE: $00000492 VOL: 0
;PCODE: $00000493 VOL: 0
;PCODE: $00000494 VOL: 0
; 0003 02A1 }
;PCODE: $00000495 VOL: 0
;
;BYTE IPC0_SND_DOSE( LPIPC_HEADER pHead )
; 0003 02A4 {
;PCODE: $00000496 VOL: 0
;PCODE: $00000497 VOL: 0
; 0003 02A5    pHead->Command = SYS_OK;
;PCODE: $00000498 VOL: 0
;	*pHead -> Y+0
;PCODE: $00000499 VOL: 0
;PCODE: $0000049A VOL: 0
;PCODE: $0000049B VOL: 0
;PCODE: $0000049C VOL: 0
; 0003 02A6    pHead->data1 = (BYTE)((gDose>>8)&0xff);
;PCODE: $0000049D VOL: 0
;PCODE: $0000049E VOL: 0
;PCODE: $0000049F VOL: 0
;PCODE: $000004A0 VOL: 0
;PCODE: $000004A1 VOL: 0
; 0003 02A7    pHead->data2 = (BYTE)(gDose&0xff);
;PCODE: $000004A2 VOL: 0
;PCODE: $000004A3 VOL: 0
;PCODE: $000004A4 VOL: 0
;PCODE: $000004A5 VOL: 0
; 0003 02A8 
; 0003 02A9    pHead->checksum = MakeCrc( (BYTE *)pHead , sizeof( IPC_HEADER )- 2 );
;PCODE: $000004A6 VOL: 0
;PCODE: $000004A7 VOL: 0
;PCODE: $000004A8 VOL: 0
;PCODE: $000004A9 VOL: 0
;PCODE: $000004AA VOL: 0
;PCODE: $000004AB VOL: 0
;PCODE: $000004AC VOL: 0
; 0003 02AA 
; 0003 02AB    IPC_SendData0( (BYTE *)pHead, sizeof( IPC_HEADER ) );
;PCODE: $000004AD VOL: 0
;PCODE: $000004AE VOL: 0
;PCODE: $000004AF VOL: 0
;PCODE: $000004B0 VOL: 0
; 0003 02AC    return TRUE;
;PCODE: $000004B1 VOL: 0
;PCODE: $000004B2 VOL: 0
;PCODE: $000004B3 VOL: 0
; 0003 02AD }
;PCODE: $000004B4 VOL: 0
;BYTE IPC0_SND_VOLTAGE( LPIPC_HEADER pHead )
; 0003 02AF {
;PCODE: $000004B5 VOL: 0
;PCODE: $000004B6 VOL: 0
; 0003 02B0    pHead->Command = SYS_OK;
;PCODE: $000004B7 VOL: 0
;	*pHead -> Y+0
;PCODE: $000004B8 VOL: 0
;PCODE: $000004B9 VOL: 0
;PCODE: $000004BA VOL: 0
;PCODE: $000004BB VOL: 0
; 0003 02B1    pHead->data1 = (BYTE)((gVoltage>>8)&0xff);  //
;PCODE: $000004BC VOL: 0
;PCODE: $000004BD VOL: 0
;PCODE: $000004BE VOL: 0
;PCODE: $000004BF VOL: 0
;PCODE: $000004C0 VOL: 0
; 0003 02B2    pHead->data2 = (BYTE)(gVoltage&0xff);
;PCODE: $000004C1 VOL: 0
;PCODE: $000004C2 VOL: 0
;PCODE: $000004C3 VOL: 0
;PCODE: $000004C4 VOL: 0
; 0003 02B3 
; 0003 02B4    pHead->checksum = MakeCrc( (BYTE *)pHead , sizeof( IPC_HEADER )- 2 );
;PCODE: $000004C5 VOL: 0
;PCODE: $000004C6 VOL: 0
;PCODE: $000004C7 VOL: 0
;PCODE: $000004C8 VOL: 0
;PCODE: $000004C9 VOL: 0
;PCODE: $000004CA VOL: 0
;PCODE: $000004CB VOL: 0
; 0003 02B5 
; 0003 02B6    IPC_SendData0( (BYTE *)pHead, sizeof( IPC_HEADER ) );
;PCODE: $000004CC VOL: 0
;PCODE: $000004CD VOL: 0
;PCODE: $000004CE VOL: 0
;PCODE: $000004CF VOL: 0
; 0003 02B7 
; 0003 02B8    return TRUE;
;PCODE: $000004D0 VOL: 0
;PCODE: $000004D1 VOL: 0
;PCODE: $000004D2 VOL: 0
; 0003 02B9 }
;PCODE: $000004D3 VOL: 0
;
;BYTE IPC0_SND_DEPTH( LPIPC_HEADER pHead )
; 0003 02BC {
;PCODE: $000004D4 VOL: 0
;PCODE: $000004D5 VOL: 0
; 0003 02BD    pHead->Command = SYS_OK;
;PCODE: $000004D6 VOL: 0
;	*pHead -> Y+0
;PCODE: $000004D7 VOL: 0
;PCODE: $000004D8 VOL: 0
;PCODE: $000004D9 VOL: 0
;PCODE: $000004DA VOL: 0
; 0003 02BE    pHead->data1 = (BYTE)((gDepth>>8)&0xff);  //
;PCODE: $000004DB VOL: 0
;PCODE: $000004DC VOL: 0
;PCODE: $000004DD VOL: 0
;PCODE: $000004DE VOL: 0
;PCODE: $000004DF VOL: 0
; 0003 02BF    pHead->data2 = (BYTE)(gDepth&0xff);
;PCODE: $000004E0 VOL: 0
;PCODE: $000004E1 VOL: 0
;PCODE: $000004E2 VOL: 0
;PCODE: $000004E3 VOL: 0
; 0003 02C0 
; 0003 02C1    pHead->checksum = MakeCrc( (BYTE *)pHead , sizeof( IPC_HEADER )- 2 );
;PCODE: $000004E4 VOL: 0
;PCODE: $000004E5 VOL: 0
;PCODE: $000004E6 VOL: 0
;PCODE: $000004E7 VOL: 0
;PCODE: $000004E8 VOL: 0
;PCODE: $000004E9 VOL: 0
;PCODE: $000004EA VOL: 0
; 0003 02C2 
; 0003 02C3    IPC_SendData0( (BYTE *)pHead, sizeof( IPC_HEADER ) );
;PCODE: $000004EB VOL: 0
;PCODE: $000004EC VOL: 0
;PCODE: $000004ED VOL: 0
;PCODE: $000004EE VOL: 0
; 0003 02C4 
; 0003 02C5    return TRUE;
;PCODE: $000004EF VOL: 0
;PCODE: $000004F0 VOL: 0
;PCODE: $000004F1 VOL: 0
; 0003 02C6 
; 0003 02C7 }
;PCODE: $000004F2 VOL: 0
;
;BYTE IPC0_SND_ELCOUNT( LPIPC_HEADER pHead )
; 0003 02CA {
;PCODE: $000004F3 VOL: 0
;PCODE: $000004F4 VOL: 0
; 0003 02CB    pHead->Command = SYS_OK;
;PCODE: $000004F5 VOL: 0
;	*pHead -> Y+0
;PCODE: $000004F6 VOL: 0
;PCODE: $000004F7 VOL: 0
;PCODE: $000004F8 VOL: 0
;PCODE: $000004F9 VOL: 0
; 0003 02CC    pHead->data1 = (BYTE)((gElCount>>8)&0xff);  //
;PCODE: $000004FA VOL: 0
;PCODE: $000004FB VOL: 0
;PCODE: $000004FC VOL: 0
;PCODE: $000004FD VOL: 0
;PCODE: $000004FE VOL: 0
; 0003 02CD    pHead->data2 = (BYTE)(gElCount&0xff);
;PCODE: $000004FF VOL: 0
;PCODE: $00000500 VOL: 0
;PCODE: $00000501 VOL: 0
;PCODE: $00000502 VOL: 0
; 0003 02CE 
; 0003 02CF    pHead->checksum = MakeCrc( (BYTE *)pHead , sizeof( IPC_HEADER )- 2 );
;PCODE: $00000503 VOL: 0
;PCODE: $00000504 VOL: 0
;PCODE: $00000505 VOL: 0
;PCODE: $00000506 VOL: 0
;PCODE: $00000507 VOL: 0
;PCODE: $00000508 VOL: 0
;PCODE: $00000509 VOL: 0
; 0003 02D0 
; 0003 02D1    IPC_SendData0( (BYTE *)pHead, sizeof( IPC_HEADER ) );
;PCODE: $0000050A VOL: 0
;PCODE: $0000050B VOL: 0
;PCODE: $0000050C VOL: 0
;PCODE: $0000050D VOL: 0
; 0003 02D2    return TRUE;
;PCODE: $0000050E VOL: 0
;PCODE: $0000050F VOL: 0
;PCODE: $00000510 VOL: 0
; 0003 02D3 
; 0003 02D4 }
;PCODE: $00000511 VOL: 0
;BYTE IPC0_SND_SPEED( LPIPC_HEADER pHead )
; 0003 02D6 {
;PCODE: $00000512 VOL: 0
;PCODE: $00000513 VOL: 0
; 0003 02D7    pHead->Command = SYS_OK;
;PCODE: $00000514 VOL: 0
;	*pHead -> Y+0
;PCODE: $00000515 VOL: 0
;PCODE: $00000516 VOL: 0
;PCODE: $00000517 VOL: 0
;PCODE: $00000518 VOL: 0
; 0003 02D8    pHead->data1 = (BYTE)((gSpeed>>8)&0xff);  //
;PCODE: $00000519 VOL: 0
;PCODE: $0000051A VOL: 0
;PCODE: $0000051B VOL: 0
;PCODE: $0000051C VOL: 0
;PCODE: $0000051D VOL: 0
; 0003 02D9    pHead->data2 = (BYTE)(gSpeed&0xff);
;PCODE: $0000051E VOL: 0
;PCODE: $0000051F VOL: 0
;PCODE: $00000520 VOL: 0
;PCODE: $00000521 VOL: 0
; 0003 02DA 
; 0003 02DB    pHead->checksum = MakeCrc( (BYTE *)pHead , sizeof( IPC_HEADER )- 2 );
;PCODE: $00000522 VOL: 0
;PCODE: $00000523 VOL: 0
;PCODE: $00000524 VOL: 0
;PCODE: $00000525 VOL: 0
;PCODE: $00000526 VOL: 0
;PCODE: $00000527 VOL: 0
;PCODE: $00000528 VOL: 0
; 0003 02DC 
; 0003 02DD    IPC_SendData0( (BYTE *)pHead, sizeof( IPC_HEADER ) );
;PCODE: $00000529 VOL: 0
;PCODE: $0000052A VOL: 0
;PCODE: $0000052B VOL: 0
;PCODE: $0000052C VOL: 0
; 0003 02DE    return TRUE;
;PCODE: $0000052D VOL: 0
;PCODE: $0000052E VOL: 0
;PCODE: $0000052F VOL: 0
; 0003 02DF 
; 0003 02E0 }
;PCODE: $00000530 VOL: 0
;
;BYTE IPC0_SND_FLAG( LPIPC_HEADER pHead )
; 0003 02E3 {
;PCODE: $00000531 VOL: 0
;PCODE: $00000532 VOL: 0
; 0003 02E4 
; 0003 02E5    pHead->Command = SYS_OK;
;PCODE: $00000533 VOL: 0
;	*pHead -> Y+0
;PCODE: $00000534 VOL: 0
;PCODE: $00000535 VOL: 0
;PCODE: $00000536 VOL: 0
;PCODE: $00000537 VOL: 0
; 0003 02E6    pHead->data1 = (BYTE)((gFlag>>8)&0xff);  //
;PCODE: $00000538 VOL: 0
;PCODE: $00000539 VOL: 0
;PCODE: $0000053A VOL: 0
;PCODE: $0000053B VOL: 0
;PCODE: $0000053C VOL: 0
;PCODE: $0000053D VOL: 0
; 0003 02E7    pHead->data2 = (BYTE)(gFlag&0xff);
;PCODE: $0000053E VOL: 0
;PCODE: $0000053F VOL: 0
;PCODE: $00000540 VOL: 0
;PCODE: $00000541 VOL: 0
; 0003 02E8 
; 0003 02E9    pHead->checksum = MakeCrc( (BYTE *)pHead , sizeof( IPC_HEADER )- 2 );
;PCODE: $00000542 VOL: 0
;PCODE: $00000543 VOL: 0
;PCODE: $00000544 VOL: 0
;PCODE: $00000545 VOL: 0
;PCODE: $00000546 VOL: 0
;PCODE: $00000547 VOL: 0
;PCODE: $00000548 VOL: 0
; 0003 02EA 
; 0003 02EB    IPC_SendData0( (BYTE *)pHead, sizeof( IPC_HEADER ) );
;PCODE: $00000549 VOL: 0
;PCODE: $0000054A VOL: 0
;PCODE: $0000054B VOL: 0
;PCODE: $0000054C VOL: 0
; 0003 02EC 
; 0003 02ED    return TRUE;
;PCODE: $0000054D VOL: 0
;PCODE: $0000054E VOL: 0
;PCODE: $0000054F VOL: 0
; 0003 02EE 
; 0003 02EF }
;PCODE: $00000550 VOL: 0
;BYTE IPC0_SND_EL_MAP( LPIPC_HEADER pHead )
; 0003 02F1 {
;PCODE: $00000551 VOL: 0
;PCODE: $00000552 VOL: 0
; 0003 02F2 
; 0003 02F3    pHead->Command = SYS_OK;
;PCODE: $00000553 VOL: 0
;	*pHead -> Y+0
;PCODE: $00000554 VOL: 0
;PCODE: $00000555 VOL: 0
;PCODE: $00000556 VOL: 0
;PCODE: $00000557 VOL: 0
; 0003 02F4    pHead->data1 = 0;  //
;PCODE: $00000558 VOL: 0
;PCODE: $00000559 VOL: 0
;PCODE: $0000055A VOL: 0
;PCODE: $0000055B VOL: 0
; 0003 02F5    pHead->data2 = 0;
;PCODE: $0000055C VOL: 0
;PCODE: $0000055D VOL: 0
;PCODE: $0000055E VOL: 0
;PCODE: $0000055F VOL: 0
; 0003 02F6 
; 0003 02F7    pHead->checksum = MakeCrc( (BYTE *)pHead , sizeof( IPC_HEADER )- 2 );
;PCODE: $00000560 VOL: 0
;PCODE: $00000561 VOL: 0
;PCODE: $00000562 VOL: 0
;PCODE: $00000563 VOL: 0
;PCODE: $00000564 VOL: 0
;PCODE: $00000565 VOL: 0
;PCODE: $00000566 VOL: 0
; 0003 02F8 
; 0003 02F9    IPC_SendData0( (BYTE *)pHead, sizeof( IPC_HEADER ) );
;PCODE: $00000567 VOL: 0
;PCODE: $00000568 VOL: 0
;PCODE: $00000569 VOL: 0
;PCODE: $0000056A VOL: 0
; 0003 02FA 
; 0003 02FB    return TRUE;
;PCODE: $0000056B VOL: 0
;PCODE: $0000056C VOL: 0
;PCODE: $0000056D VOL: 0
; 0003 02FC 
; 0003 02FD }
;PCODE: $0000056E VOL: 0
;BYTE IPC0_SND_MOTOR_POS1( LPIPC_HEADER pHead )
; 0003 02FF {
;PCODE: $0000056F VOL: 0
;PCODE: $00000570 VOL: 0
; 0003 0300 
; 0003 0301    pHead->Command = SYS_OK;
;PCODE: $00000571 VOL: 0
;	*pHead -> Y+0
;PCODE: $00000572 VOL: 0
;PCODE: $00000573 VOL: 0
;PCODE: $00000574 VOL: 0
;PCODE: $00000575 VOL: 0
; 0003 0302    pHead->data1 = 0;  //
;PCODE: $00000576 VOL: 0
;PCODE: $00000577 VOL: 0
;PCODE: $00000578 VOL: 0
;PCODE: $00000579 VOL: 0
; 0003 0303    pHead->data2 = 0;
;PCODE: $0000057A VOL: 0
;PCODE: $0000057B VOL: 0
;PCODE: $0000057C VOL: 0
;PCODE: $0000057D VOL: 0
; 0003 0304 
; 0003 0305    pHead->checksum = MakeCrc( (BYTE *)pHead , sizeof( IPC_HEADER )- 2 );
;PCODE: $0000057E VOL: 0
;PCODE: $0000057F VOL: 0
;PCODE: $00000580 VOL: 0
;PCODE: $00000581 VOL: 0
;PCODE: $00000582 VOL: 0
;PCODE: $00000583 VOL: 0
;PCODE: $00000584 VOL: 0
; 0003 0306 
; 0003 0307    IPC_SendData0( (BYTE *)pHead, sizeof( IPC_HEADER ) );
;PCODE: $00000585 VOL: 0
;PCODE: $00000586 VOL: 0
;PCODE: $00000587 VOL: 0
;PCODE: $00000588 VOL: 0
; 0003 0308 
; 0003 0309    return TRUE;
;PCODE: $00000589 VOL: 0
;PCODE: $0000058A VOL: 0
;PCODE: $0000058B VOL: 0
; 0003 030A }
;PCODE: $0000058C VOL: 0
;
;BYTE IPC0_SND_MOTOR_POS2( LPIPC_HEADER pHead )
; 0003 030D {
;PCODE: $0000058D VOL: 0
;PCODE: $0000058E VOL: 0
; 0003 030E    pHead->Command = SYS_OK;
;PCODE: $0000058F VOL: 0
;	*pHead -> Y+0
;PCODE: $00000590 VOL: 0
;PCODE: $00000591 VOL: 0
;PCODE: $00000592 VOL: 0
;PCODE: $00000593 VOL: 0
; 0003 030F    pHead->data1 = 0;  //
;PCODE: $00000594 VOL: 0
;PCODE: $00000595 VOL: 0
;PCODE: $00000596 VOL: 0
;PCODE: $00000597 VOL: 0
; 0003 0310    pHead->data2 = 0;
;PCODE: $00000598 VOL: 0
;PCODE: $00000599 VOL: 0
;PCODE: $0000059A VOL: 0
;PCODE: $0000059B VOL: 0
; 0003 0311 
; 0003 0312    pHead->checksum = MakeCrc( (BYTE *)pHead , sizeof( IPC_HEADER )- 2 );
;PCODE: $0000059C VOL: 0
;PCODE: $0000059D VOL: 0
;PCODE: $0000059E VOL: 0
;PCODE: $0000059F VOL: 0
;PCODE: $000005A0 VOL: 0
;PCODE: $000005A1 VOL: 0
;PCODE: $000005A2 VOL: 0
; 0003 0313 
; 0003 0314    IPC_SendData0( (BYTE *)pHead, sizeof( IPC_HEADER ) );
;PCODE: $000005A3 VOL: 0
;PCODE: $000005A4 VOL: 0
;PCODE: $000005A5 VOL: 0
;PCODE: $000005A6 VOL: 0
; 0003 0315 
; 0003 0316    return TRUE;
;PCODE: $000005A7 VOL: 0
;PCODE: $000005A8 VOL: 0
;PCODE: $000005A9 VOL: 0
; 0003 0317 }
;PCODE: $000005AA VOL: 0
;
;BYTE IPC0_SND_ERROR( LPIPC_HEADER pHead )
; 0003 031A {
;PCODE: $000005AB VOL: 0
;PCODE: $000005AC VOL: 0
; 0003 031B    pHead->Command = SYS_OK;
;PCODE: $000005AD VOL: 0
;	*pHead -> Y+0
;PCODE: $000005AE VOL: 0
;PCODE: $000005AF VOL: 0
;PCODE: $000005B0 VOL: 0
;PCODE: $000005B1 VOL: 0
; 0003 031C    pHead->data1 = 0;  //
;PCODE: $000005B2 VOL: 0
;PCODE: $000005B3 VOL: 0
;PCODE: $000005B4 VOL: 0
;PCODE: $000005B5 VOL: 0
; 0003 031D    if( gReadyActionFlag ==FALSE )
;PCODE: $000005B6 VOL: 0
;PCODE: $000005B7 VOL: 0
;PCODE: $000005B8 VOL: 0
; 0003 031E         pHead->data2 = ERROR_NOTLCD;
;PCODE: $000005B9 VOL: 0
;PCODE: $000005BA VOL: 0
;PCODE: $000005BB VOL: 0
;PCODE: $000005BC VOL: 0
; 0003 031F    else
;PCODE: $000005BD VOL: 0
;PCODE: $000005BE VOL: 0
; 0003 0320        pHead->data2 = gError;
;PCODE: $000005BF VOL: 0
;PCODE: $000005C0 VOL: 0
;PCODE: $000005C1 VOL: 0
; 0003 0321 
; 0003 0322    pHead->checksum = MakeCrc( (BYTE *)pHead , sizeof( IPC_HEADER )- 2 );
;PCODE: $000005C2 VOL: 0
;PCODE: $000005C3 VOL: 0
;PCODE: $000005C4 VOL: 0
;PCODE: $000005C5 VOL: 0
;PCODE: $000005C6 VOL: 0
;PCODE: $000005C7 VOL: 0
;PCODE: $000005C8 VOL: 0
;PCODE: $000005C9 VOL: 0
; 0003 0323 
; 0003 0324    IPC_SendData0( (BYTE *)pHead, sizeof( IPC_HEADER ) );
;PCODE: $000005CA VOL: 0
;PCODE: $000005CB VOL: 0
;PCODE: $000005CC VOL: 0
;PCODE: $000005CD VOL: 0
; 0003 0325 
; 0003 0326    return TRUE;
;PCODE: $000005CE VOL: 0
;PCODE: $000005CF VOL: 0
;PCODE: $000005D0 VOL: 0
; 0003 0327 
; 0003 0328 }
;PCODE: $000005D1 VOL: 0
;void IPC_RunProcess0( void )
; 0003 032A {
;PCODE: $000005D2 VOL: 0
;PCODE: $000005D3 VOL: 0
; 0003 032B      BYTE RcvHead[30];
; 0003 032C      BYTE RcvByte;
; 0003 032D      BYTE  Crc,RcvCrc;
; 0003 032E      LPIPC_HEADER pHead;
; 0003 032F 
; 0003 0330   //   while( TRUE )
; 0003 0331      {
;PCODE: $000005D4 VOL: 0
;PCODE: $000005D5 VOL: 0
;	RcvHead -> Y+6
;	RcvByte -> R17
;	Crc -> R16
;	RcvCrc -> R19
;	*pHead -> R20,R21
; 0003 0332         RcvByte = IPC_RcvData_Interrupt0( RcvHead, sizeof( IPC_HEADER ) );
;PCODE: $000005D6 VOL: 0
;PCODE: $000005D7 VOL: 0
;PCODE: $000005D8 VOL: 0
;PCODE: $000005D9 VOL: 0
;PCODE: $000005DA VOL: 0
; 0003 0333         pHead = ( LPIPC_HEADER )RcvHead;
;PCODE: $000005DB VOL: 0
;PCODE: $000005DC VOL: 0
; 0003 0334 
; 0003 0335          Crc =  MakeCrc(  RcvHead , sizeof( IPC_HEADER )- 2 );
;PCODE: $000005DD VOL: 0
;PCODE: $000005DE VOL: 0
;PCODE: $000005DF VOL: 0
;PCODE: $000005E0 VOL: 0
;PCODE: $000005E1 VOL: 0
;PCODE: $000005E2 VOL: 0
; 0003 0336          RcvCrc = pHead->checksum;
;PCODE: $000005E3 VOL: 0
;PCODE: $000005E4 VOL: 0
;PCODE: $000005E5 VOL: 0
; 0003 0337 
; 0003 0338          if(  RcvByte == sizeof( IPC_HEADER ) && RcvCrc == Crc &&
; 0003 0339               pHead->stx == 0x02 && pHead->etx == 0x03 )
;PCODE: $000005E6 VOL: 0
;PCODE: $000005E7 VOL: 0
;PCODE: $000005E8 VOL: 0
;PCODE: $000005E9 VOL: 0
;PCODE: $000005EA VOL: 0
;PCODE: $000005EB VOL: 0
;PCODE: $000005EC VOL: 0
;PCODE: $000005ED VOL: 0
;PCODE: $000005EE VOL: 0
;PCODE: $000005EF VOL: 0
;PCODE: $000005F0 VOL: 0
;PCODE: $000005F1 VOL: 0
;PCODE: $000005F2 VOL: 0
;PCODE: $000005F3 VOL: 0
;PCODE: $000005F4 VOL: 0
;PCODE: $000005F5 VOL: 0
;PCODE: $000005F6 VOL: 0
;PCODE: $000005F7 VOL: 0
; 0003 033A          {
; 0003 033B               if( pHead->RWflag ==  IPC_MODE_READ )
;PCODE: $000005F8 VOL: 0
;PCODE: $000005F9 VOL: 0
;PCODE: $000005FA VOL: 0
;PCODE: $000005FB VOL: 0
; 0003 033C                    IPC_SndProcess0( RcvHead );
;PCODE: $000005FC VOL: 0
;PCODE: $000005FD VOL: 0
; 0003 033D               else IPC_RcvProcess0( RcvHead );
;PCODE: $000005FE VOL: 0
;PCODE: $000005FF VOL: 0
;PCODE: $00000600 VOL: 0
;PCODE: $00000601 VOL: 0
; 0003 033E 
; 0003 033F           }
;PCODE: $00000602 VOL: 0
; 0003 0340           else
;PCODE: $00000603 VOL: 0
;PCODE: $00000604 VOL: 0
; 0003 0341           {
; 0003 0342              IPC_Send_Response0( RcvHead, SYS_ERROR);
;PCODE: $00000605 VOL: 0
;PCODE: $00000606 VOL: 0
;PCODE: $00000607 VOL: 0
;PCODE: $00000608 VOL: 0
; 0003 0343              IPC_ResetCount0();
;PCODE: $00000609 VOL: 0
; 0003 0344           }
;PCODE: $0000060A VOL: 0
; 0003 0345 
; 0003 0346      }
; 0003 0347 
; 0003 0348 }
;PCODE: $0000060B VOL: 0
;PCODE: $0000060C VOL: 0
;PCODE: $0000060D VOL: 0
;PCODE: $0000060E VOL: 0
; void IPC_Send_Response0( BYTE *Data, BYTE Res )
; 0003 034A {
;PCODE: $0000060F VOL: 0
;PCODE: $00000610 VOL: 0
; 0003 034B      LPIPC_HEADER mLpHead;
; 0003 034C 
; 0003 034D      mLpHead = (LPIPC_HEADER)Data;
;PCODE: $00000611 VOL: 0
;PCODE: $00000612 VOL: 0
;PCODE: $00000613 VOL: 0
;	*Data -> Y+3
;	Res -> Y+2
;	*mLpHead -> R16,R17
;PCODE: $00000614 VOL: 0
;PCODE: $00000615 VOL: 0
; 0003 034E 
; 0003 034F      mLpHead->Command = Res;
;PCODE: $00000616 VOL: 0
;PCODE: $00000617 VOL: 0
;PCODE: $00000618 VOL: 0
; 0003 0350      mLpHead->data1 = 0;
;PCODE: $00000619 VOL: 0
;PCODE: $0000061A VOL: 0
;PCODE: $0000061B VOL: 0
;PCODE: $0000061C VOL: 0
; 0003 0351      mLpHead->data2 = 0;
;PCODE: $0000061D VOL: 0
;PCODE: $0000061E VOL: 0
;PCODE: $0000061F VOL: 0
;PCODE: $00000620 VOL: 0
; 0003 0352      mLpHead-> checksum = MakeCrc( (BYTE *)mLpHead , sizeof( IPC_HEADER )- 2 );
;PCODE: $00000621 VOL: 0
;PCODE: $00000622 VOL: 0
;PCODE: $00000623 VOL: 0
;PCODE: $00000624 VOL: 0
;PCODE: $00000625 VOL: 0
;PCODE: $00000626 VOL: 0
; 0003 0353 
; 0003 0354      IPC_SendData0( Data, sizeof( IPC_HEADER ) );
;PCODE: $00000627 VOL: 0
;PCODE: $00000628 VOL: 0
;PCODE: $00000629 VOL: 0
;PCODE: $0000062A VOL: 0
; 0003 0355 }
;PCODE: $0000062B VOL: 0
;PCODE: $0000062C VOL: 0
;PCODE: $0000062D VOL: 0
;PCODE: $0000062E VOL: 0
;PCODE: $0000062F VOL: 0
;PCODE: $00000630 VOL: 0
;PCODE: $00000631 VOL: 0
;
;void IPC_RcvProcess0( BYTE *Data )
; 0003 0358 {
;PCODE: $00000632 VOL: 0
;PCODE: $00000633 VOL: 0
; 0003 0359       LPIPC_HEADER pHead;
; 0003 035A 
; 0003 035B       pHead   = (LPIPC_HEADER)Data;
;PCODE: $00000634 VOL: 0
;PCODE: $00000635 VOL: 0
;PCODE: $00000636 VOL: 0
;	*Data -> Y+2
;	*pHead -> R16,R17
;PCODE: $00000637 VOL: 0
;PCODE: $00000638 VOL: 0
; 0003 035C       if(  pHead->Command < sizeof(IPC0Rcvfun)/2 )
;PCODE: $00000639 VOL: 0
;PCODE: $0000063A VOL: 0
;PCODE: $0000063B VOL: 0
;PCODE: $0000063C VOL: 0
; 0003 035D       {
; 0003 035E              if( IPC0Rcvfun[pHead->Command]( pHead ) == TRUE )        //  Run Command
;PCODE: $0000063D VOL: 0
;PCODE: $0000063E VOL: 0
;PCODE: $0000063F VOL: 0
;PCODE: $00000640 VOL: 0
;PCODE: $00000641 VOL: 0
;PCODE: $00000642 VOL: 0
;PCODE: $00000643 VOL: 0
;PCODE: $00000644 VOL: 0
;PCODE: $00000645 VOL: 0
;PCODE: $00000646 VOL: 0
;PCODE: $00000647 VOL: 0
;PCODE: $00000648 VOL: 0
;PCODE: $00000649 VOL: 0
; 0003 035F              {
; 0003 0360                  IPC_Send_Response0( Data, SYS_OK );
;PCODE: $0000064A VOL: 0
;PCODE: $0000064B VOL: 0
;PCODE: $0000064C VOL: 0
;PCODE: $0000064D VOL: 0
; 0003 0361              }
; 0003 0362              else
;PCODE: $0000064E VOL: 0
;PCODE: $0000064F VOL: 0
; 0003 0363              {
; 0003 0364                  IPC_Send_Response0( Data, SYS_ERROR);
;PCODE: $00000650 VOL: 0
;PCODE: $00000651 VOL: 0
;PCODE: $00000652 VOL: 0
;PCODE: $00000653 VOL: 0
; 0003 0365               }
;PCODE: $00000654 VOL: 0
; 0003 0366        }
; 0003 0367        else
;PCODE: $00000655 VOL: 0
;PCODE: $00000656 VOL: 0
; 0003 0368        {
; 0003 0369            IPC_Send_Response0( Data, SYS_ERROR );
;PCODE: $00000657 VOL: 0
;PCODE: $00000658 VOL: 0
;PCODE: $00000659 VOL: 0
;PCODE: $0000065A VOL: 0
; 0003 036A         }
;PCODE: $0000065B VOL: 0
; 0003 036B 
; 0003 036C }
;PCODE: $0000065C VOL: 0
;PCODE: $0000065D VOL: 0
;PCODE: $0000065E VOL: 0
;PCODE: $0000065F VOL: 0
;PCODE: $00000660 VOL: 0
;PCODE: $00000661 VOL: 0
;PCODE: $00000662 VOL: 0
;
;
;void IPC_SndProcess0( BYTE *Data )
; 0003 0370 {
;PCODE: $00000663 VOL: 0
;PCODE: $00000664 VOL: 0
; 0003 0371       LPIPC_HEADER pHead;
; 0003 0372 
; 0003 0373       pHead = (LPIPC_HEADER)Data;
;PCODE: $00000665 VOL: 0
;PCODE: $00000666 VOL: 0
;PCODE: $00000667 VOL: 0
;	*Data -> Y+2
;	*pHead -> R16,R17
;PCODE: $00000668 VOL: 0
;PCODE: $00000669 VOL: 0
; 0003 0374       if( pHead->Command < sizeof(IPC0Sndfun)/2  )
;PCODE: $0000066A VOL: 0
;PCODE: $0000066B VOL: 0
;PCODE: $0000066C VOL: 0
;PCODE: $0000066D VOL: 0
; 0003 0375       {
; 0003 0376           if( IPC0Sndfun[pHead->Command]( pHead ) == FALSE )        //  Run Command
;PCODE: $0000066E VOL: 0
;PCODE: $0000066F VOL: 0
;PCODE: $00000670 VOL: 0
;PCODE: $00000671 VOL: 0
;PCODE: $00000672 VOL: 0
;PCODE: $00000673 VOL: 0
;PCODE: $00000674 VOL: 0
;PCODE: $00000675 VOL: 0
;PCODE: $00000676 VOL: 0
;PCODE: $00000677 VOL: 0
;PCODE: $00000678 VOL: 0
;PCODE: $00000679 VOL: 0
;PCODE: $0000067A VOL: 0
; 0003 0377               IPC_Send_Response0( Data, SYS_ERROR );
;PCODE: $0000067B VOL: 0
;PCODE: $0000067C VOL: 0
;PCODE: $0000067D VOL: 0
;PCODE: $0000067E VOL: 0
; 0003 0378       }
;PCODE: $0000067F VOL: 0
; 0003 0379       else
;PCODE: $00000680 VOL: 0
;PCODE: $00000681 VOL: 0
; 0003 037A       {
; 0003 037B            IPC_Send_Response0( Data, SYS_ERROR );
;PCODE: $00000682 VOL: 0
;PCODE: $00000683 VOL: 0
;PCODE: $00000684 VOL: 0
;PCODE: $00000685 VOL: 0
; 0003 037C       }
;PCODE: $00000686 VOL: 0
; 0003 037D }
;PCODE: $00000687 VOL: 0
;PCODE: $00000688 VOL: 0
;PCODE: $00000689 VOL: 0
;PCODE: $0000068A VOL: 0
;PCODE: $0000068B VOL: 0
;PCODE: $0000068C VOL: 0
;PCODE: $0000068D VOL: 0
