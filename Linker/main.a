;#include <mega128.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <stdio.h>
;#include <delay.h>
;#include <math.h>
;#include <string.h>
;
;#include "DAC7611/DAC7611.h"
;#include "Uart/uart.h"
;#include "IPC/IPClib.h"
;#include "InAdc/InAdc.h"
;#include "InEEprom/InEepromLib.h"
;
;const float DacArray[12] = {10.0f, 20.0f, 30.0f, 40.20f, 13.20f, 16.94f, 21.28f, 25.82f, 30.57f, 35.4f, 40.0f, 55.9f};
;
;// Variables
;int  gVoltage;
;BYTE gMode;
;BOOL gRunFlag;
;int  gDepth;
;int  gSpeed;
;int  gElCount=0;
;BYTE gFlag;
;int  gDose;
;BYTE gError;
;int  gAdcLoc=0;
;int  gElLoc=0;
;int  gMotorPos1=0;
;int  gMotorPos2=0;
;
;
;WORD gTime1ms;
;WORD goldTime1ms;
;BYTE WaitEvent( void );
;BYTE gElMatrix[4];
;int  gCurState=0;
;int  gCalValue0,gCalValue1;
;int  gDutyOff=0;
;BOOL gElCompletFlag = FALSE;
;int  gShift=0;
;//int  gReadVol;
;int  gVolAdjCount=0;
;int  gVolChkCount = 0;
;//int  gInitCount=0;
;BYTE gCurMode;
;BOOL gGenMode=FALSE;
;BOOL gReadyActionFlag=FALSE;
;
;void InitSettingData(void);
;void LoadInEeprom( void);
;void InitData(void);
;
;//const int LowVolAdj[4] = {0, 8, 7, 0};
;
;// Timer 0 overflow interrupt service routine
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0007 0038 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0007 0039     // Reinitialize Timer 0 value
; 0007 003A     TCNT0 = 0x06;   //1ms
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0007 003B     // Place your code here
; 0007 003C     gTime1ms++;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0007 003D }
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;
;void PulseGenerator1( void )
; 0007 0040 {
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0007 0041    // Reinitialize Timer1 value
; 0007 0042     TCNT1H=0xB1E0 >> 8;           //10ms
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0007 0043     TCNT1L=0xB1E0 & 0xff;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0007 0044 
; 0007 0045     // Place your code here
; 0007 0046     if( gRunFlag==TRUE && gElCompletFlag == FALSE )
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0007 0047     {
; 0007 0048        if( gCurState == 0 )
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0007 0049        {
; 0007 004A           gCalValue0 = gElMatrix[gElLoc]<<4 |(~gElMatrix[gElLoc])&0x0f; //((~gElMatrix[gElLoc]<<4)&0xf0)| gElMatrix[gElL ...
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0007 004B           gCalValue1 = gCalValue0&0x0f; // (~gElMatrix[gElLoc])&0x0f;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0007 004C 
; 0007 004D           PORTC = gCalValue0;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0007 004E           gCurState = 1;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0007 004F        }
; 0007 0050        else if( gCurState == 1 )
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0007 0051        {
; 0007 0052           PORTC = gCalValue1;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0007 0053           gCurState = 2;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0007 0054        }
; 0007 0055        else if( gCurState == 2 )
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0007 0056        {
; 0007 0057           PORTC = gCalValue0;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0007 0058           gCurState = 3;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0007 0059        }
; 0007 005A        else if( gCurState == 3 )
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0007 005B        {
; 0007 005C           PORTC = gCalValue1;
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0007 005D           gCurState = 4;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0007 005E        }
; 0007 005F        else if( gCurState == 4 )
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0007 0060        {
; 0007 0061           PORTC = gCalValue0;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0007 0062           gCurState = 5;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0007 0063        }
; 0007 0064        else if( gCurState == 5 )
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0007 0065        {
; 0007 0066           gDutyOff = 0;
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0007 0067           PORTC = gCalValue1;
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0007 0068           gCurState = 6;
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0007 0069        }
; 0007 006A        else if( gCurState == 6 )
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0007 006B        {
; 0007 006C           gDutyOff++;
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0007 006D           if( gDutyOff >8)
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0007 006E           {
; 0007 006F              gCurState = 0;
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0007 0070              gElLoc++;
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0007 0071              if( gElLoc > 3 )
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0007 0072              {
; 0007 0073                 PORTC = 0;
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0007 0074                 gElLoc = 0;
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0007 0075                 gElCompletFlag = TRUE;
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0007 0076              }
; 0007 0077           }
;PCODE: $00000088 VOL: 0
; 0007 0078        }
;PCODE: $00000089 VOL: 0
; 0007 0079    }
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0007 007A }
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;
;void PulseGenerator2( void )
; 0007 007D {
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0007 007E      // Reinitialize Timer1 value
; 0007 007F     TCNT1H=0xE013 >> 8;          //     0.4ms
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0007 0080     TCNT1L=0xE013 & 0xff;
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0007 0081 
; 0007 0082     // Place your code here
; 0007 0083     if( gRunFlag==TRUE && gElCompletFlag == FALSE )
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0007 0084     {
; 0007 0085        if( gCurState == 0 )
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0007 0086        {
; 0007 0087           gCalValue0 = gElMatrix[gElLoc]<<4 |(~gElMatrix[gElLoc])&0x0f; //((~gElMatrix[gElLoc]<<4)&0xf0)| gElMatrix[gElL ...
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0007 0088           gCalValue1 = gCalValue0&0x0f; // (~gElMatrix[gElLoc])&0x0f;
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0007 0089 
; 0007 008A           PORTC = gCalValue0;
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0007 008B           gDutyOff = 0;
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0007 008C           gCurState = 1;
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0007 008D        }
; 0007 008E        else if( gCurState == 1 )
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0007 008F        {
; 0007 0090           gDutyOff++;
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0007 0091           if( gDutyOff >10 ) gCurState = 2;
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0007 0092        }
;PCODE: $000000CA VOL: 0
; 0007 0093        else if( gCurState == 2 )
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
; 0007 0094        {
; 0007 0095           gDutyOff = 0;
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0007 0096           PORTC = gCalValue1;
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0007 0097           gCurState = 3;
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
; 0007 0098        }
; 0007 0099        else if( gCurState == 3 )
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0007 009A        {
; 0007 009B           PORTC = gCalValue0;
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0007 009C           gDutyOff++;
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0007 009D           if( gDutyOff >11) gCurState = 4;
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0007 009E        }
;PCODE: $000000E6 VOL: 0
; 0007 009F        else if( gCurState == 4 )
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0007 00A0        {
; 0007 00A1           gDutyOff = 0;
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
; 0007 00A2           PORTC = gCalValue1;
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0007 00A3           gCurState = 5;
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
; 0007 00A4        }
; 0007 00A5        else if( gCurState == 5 )
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
; 0007 00A6        {
; 0007 00A7           gDutyOff++;
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0007 00A8           if( gDutyOff >297)     //150ms
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0007 00A9           {
; 0007 00AA              gCurState = 0;
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
; 0007 00AB              gElLoc++;
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
; 0007 00AC              if( gElLoc > 3 )
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
; 0007 00AD              {
; 0007 00AE                 PORTC = 0x00;
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0007 00AF                 gElLoc = 0;
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
; 0007 00B0                 gElCompletFlag = TRUE;
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
; 0007 00B1              }
; 0007 00B2           }
;PCODE: $0000010D VOL: 0
; 0007 00B3        }
;PCODE: $0000010E VOL: 0
; 0007 00B4    }
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0007 00B5 }
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;
;void PulseGenerator3( void )
; 0007 00B8 {
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0007 00B9    // Reinitialize Timer1 value
; 0007 00BA     TCNT1H=0xE700 >> 8;          //     0.4ms
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
; 0007 00BB     TCNT1L=0xE700 & 0xff;
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
; 0007 00BC 
; 0007 00BD     // Place your code here
; 0007 00BE     if( gRunFlag==TRUE && gElCompletFlag == FALSE )
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
; 0007 00BF     {
; 0007 00C0        if( gCurState == 0 )
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
; 0007 00C1        {
; 0007 00C2           gCalValue0 = gElMatrix[gElLoc]<<4 |(~gElMatrix[gElLoc])&0x0f; //((~gElMatrix[gElLoc]<<4)&0xf0)| gElMatrix[gElL ...
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
; 0007 00C3           gCalValue1 = gCalValue0&0x0f; // (~gElMatrix[gElLoc])&0x0f;
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0007 00C4 
; 0007 00C5           PORTC = gCalValue0;
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0007 00C6           gDutyOff = 0;
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
; 0007 00C7 
; 0007 00C8           gCurState = 1;
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
; 0007 00C9        }
; 0007 00CA        else if( gCurState == 1 )
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
; 0007 00CB        {
; 0007 00CC           gDutyOff++;
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
; 0007 00CD           if( gDutyOff >47 )gCurState = 2;
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
; 0007 00CE 
; 0007 00CF        }
;PCODE: $0000014E VOL: 0
; 0007 00D0        else if( gCurState == 2 )
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
; 0007 00D1        {
; 0007 00D2           gDutyOff = 0;
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
; 0007 00D3           PORTC = gCalValue1;
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
; 0007 00D4           gCurState = 3;
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
; 0007 00D5        }
; 0007 00D6        else if( gCurState == 3 )
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
; 0007 00D7        {
; 0007 00D8            PORTC = gCalValue0;
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
; 0007 00D9            gDutyOff++;
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
; 0007 00DA            if( gDutyOff >47 )gCurState = 4;
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
; 0007 00DB        }
;PCODE: $0000016A VOL: 0
; 0007 00DC        else if( gCurState == 4 )
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
; 0007 00DD        {
; 0007 00DE           gDutyOff = 0;
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
; 0007 00DF           PORTC = gCalValue1;
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
; 0007 00E0           gCurState = 5;
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
; 0007 00E1        }
; 0007 00E2        else if( gCurState == 5 )
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
; 0007 00E3        {
; 0007 00E4           PORTC = gCalValue0;
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
; 0007 00E5           gDutyOff++;
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
; 0007 00E6           if( gDutyOff >47 ) gCurState = 6;
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
; 0007 00E7        }
;PCODE: $00000186 VOL: 0
; 0007 00E8        else if( gCurState == 6 )
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
; 0007 00E9        {
; 0007 00EA           gDutyOff = 0;
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
; 0007 00EB           PORTC = gCalValue1;
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
; 0007 00EC           gCurState = 7;
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
; 0007 00ED        }
; 0007 00EE        else if( gCurState == 7 )
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
; 0007 00EF        {
; 0007 00F0           gDutyOff++;
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
; 0007 00F1           if( gDutyOff >246)
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
; 0007 00F2           {
; 0007 00F3              gCurState = 0;
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
; 0007 00F4              gElLoc++;
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
; 0007 00F5              if( gElLoc > 3 )
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
; 0007 00F6              {
; 0007 00F7                 PORTC = 0;
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
; 0007 00F8                 gElLoc = 0;
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
; 0007 00F9                 gElCompletFlag = TRUE;
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
; 0007 00FA              }
; 0007 00FB           }
;PCODE: $000001AD VOL: 0
; 0007 00FC        }
;PCODE: $000001AE VOL: 0
; 0007 00FD    }
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
; 0007 00FE }
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;
;void PulseGenerator4( void )
; 0007 0101 {
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
; 0007 0102      // Reinitialize Timer1 value
; 0007 0103     TCNT1H=0xE013 >> 8;          //     0.4ms
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
; 0007 0104     TCNT1L=0xE013 & 0xff;
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
; 0007 0105 
; 0007 0106     // Place your code here
; 0007 0107     if( gRunFlag==TRUE && gElCompletFlag == FALSE )
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
; 0007 0108     {
; 0007 0109        if( gCurState == 0 )
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
; 0007 010A        {
; 0007 010B           gCalValue0 = gElMatrix[gElLoc]<<4 |(~gElMatrix[gElLoc])&0x0f; //((~gElMatrix[gElLoc]<<4)&0xf0)| gElMatrix[gElL ...
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
; 0007 010C           gCalValue1 = gCalValue0&0x0f; // (~gElMatrix[gElLoc])&0x0f;
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
; 0007 010D 
; 0007 010E           PORTC = gCalValue0;
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
; 0007 010F           gDutyOff = 0;
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
; 0007 0110           gCurState = 1;
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
; 0007 0111        }
; 0007 0112        else if( gCurState == 1 )
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
; 0007 0113        {
; 0007 0114           gDutyOff++;
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
; 0007 0115           if( gDutyOff >11 )gCurState = 2;
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
; 0007 0116        }
;PCODE: $000001F0 VOL: 0
; 0007 0117        else if( gCurState == 2 )
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
; 0007 0118        {
; 0007 0119           gDutyOff = 0;
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
; 0007 011A           PORTC = gCalValue1;
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
; 0007 011B           gCurState = 3;
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
; 0007 011C        }
; 0007 011D        else if( gCurState == 3 )
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
; 0007 011E        {
; 0007 011F           PORTC = gCalValue0;
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
; 0007 0120           gDutyOff++;
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
; 0007 0121           if( gDutyOff >11) gCurState = 4;
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
; 0007 0122        }
;PCODE: $0000020C VOL: 0
; 0007 0123        else if( gCurState == 4 )
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
; 0007 0124        {
; 0007 0125           gDutyOff = 0;
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
; 0007 0126           PORTC = gCalValue1;
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
; 0007 0127           gCurState = 5;
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
; 0007 0128        }
; 0007 0129        else if( gCurState == 5 )
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
; 0007 012A        {
; 0007 012B           PORTC = gCalValue0;
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
; 0007 012C           gDutyOff++;
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
; 0007 012D           if( gDutyOff >11) gCurState = 6;
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
; 0007 012E        }
;PCODE: $00000228 VOL: 0
; 0007 012F        else if( gCurState == 6 )
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
; 0007 0130        {
; 0007 0131           gDutyOff = 0;
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
; 0007 0132           PORTC = gCalValue1;
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
; 0007 0133           gCurState = 7;
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
; 0007 0134        }
; 0007 0135        else if( gCurState == 7 )
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
; 0007 0136        {
; 0007 0137           PORTC = gCalValue0;
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
; 0007 0138           gDutyOff++;
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
; 0007 0139           if( gDutyOff >11) gCurState = 8;
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
; 0007 013A        }
;PCODE: $00000244 VOL: 0
; 0007 013B        else if( gCurState == 8 )
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
; 0007 013C        {
; 0007 013D           gDutyOff = 0;
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
; 0007 013E           PORTC = gCalValue1;
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
; 0007 013F           gCurState = 9;
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
; 0007 0140        }
; 0007 0141        else if( gCurState == 9 )
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
; 0007 0142        {
; 0007 0143           PORTC = gCalValue0;
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
; 0007 0144           gDutyOff++;
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
; 0007 0145           if( gDutyOff >11) gCurState = 10;
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
; 0007 0146        }
;PCODE: $00000260 VOL: 0
; 0007 0147        else if( gCurState == 10 )
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
; 0007 0148        {
; 0007 0149           gDutyOff = 0;
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
; 0007 014A           PORTC = gCalValue1;
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
; 0007 014B           gCurState = 11;
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
; 0007 014C        }
; 0007 014D        else if( gCurState == 11 )
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
; 0007 014E        {
; 0007 014F           gDutyOff++;
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
; 0007 0150           if( gDutyOff >294)     //150ms
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
; 0007 0151           {
; 0007 0152              gCurState = 0;
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
; 0007 0153              gElLoc++;
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
; 0007 0154              if( gElLoc > 3 )
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
; 0007 0155              {
; 0007 0156                 PORTC = 0x00;
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
; 0007 0157                 gElLoc = 0;
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
; 0007 0158                 gElCompletFlag = TRUE;
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
; 0007 0159              }
; 0007 015A           }
;PCODE: $00000287 VOL: 0
; 0007 015B        }
;PCODE: $00000288 VOL: 0
; 0007 015C    }
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
; 0007 015D }
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
;
;void PulseGenerator5( void )
; 0007 0160 {
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
; 0007 0161     int i=0;
; 0007 0162     // Reinitialize Timer1 value
; 0007 0163 
; 0007 0164     #if 0
; 0007 0165     TCNT1H=0xB1E0 >> 8;           //10ms
; 0007 0166     TCNT1L=0xB1E0 & 0xff;
; 0007 0167     #else
; 0007 0168     TCNT1H=0xC1;
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
;	i -> R16,R17
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
; 0007 0169     TCNT1L=0x80;
;PCODE: $000002A0 VOL: 0
;PCODE: $000002A1 VOL: 0
; 0007 016A     #endif
; 0007 016B 
; 0007 016C     // Place your code here
; 0007 016D     if( gRunFlag==TRUE && gElCompletFlag == FALSE )
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
; 0007 016E     {
; 0007 016F        if( gCurState == 0 )
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
; 0007 0170        {
; 0007 0171          // gCalValue0 = gElMatrix[gElLoc]<<4 |(~gElMatrix[gElLoc])&0x0f; //((~gElMatrix[gElLoc]<<4)&0xf0)| gElMatrix[gE ...
; 0007 0172          // gCalValue1 = gCalValue0&0x0f; // (~gElMatrix[gElLoc])&0x0f;
; 0007 0173           gCalValue0 = gElMatrix[gElLoc]<<4;
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
; 0007 0174           gCalValue1 = 0;
;PCODE: $000002B5 VOL: 0
;PCODE: $000002B6 VOL: 0
; 0007 0175 
; 0007 0176           for( i=0; i< 4; i++)
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
; 0007 0177           {
; 0007 0178              if( gElMatrix[gElLoc]&(0x08>>i))
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
; 0007 0179               break;
;PCODE: $000002C8 VOL: 0
; 0007 017A           }
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
; 0007 017B           gShift = i;
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
; 0007 017C 
; 0007 017D           gShift++;
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
; 0007 017E           if( gShift > 3 ) gShift = 0;
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
;PCODE: $000002D9 VOL: 0
; 0007 017F 
; 0007 0180           PORTC = gCalValue0|(0x08>>gShift);
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
; 0007 0181           gCurState = 1;
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
; 0007 0182        }
; 0007 0183        else if( gCurState == 1 )
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
;PCODE: $000002E7 VOL: 0
; 0007 0184        {
; 0007 0185           PORTC = gCalValue1;
;PCODE: $000002E8 VOL: 0
;PCODE: $000002E9 VOL: 0
; 0007 0186           gCurState = 2;
;PCODE: $000002EA VOL: 0
;PCODE: $000002EB VOL: 0
; 0007 0187        }
; 0007 0188        else if( gCurState == 2 )
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
; 0007 0189        {
; 0007 018A           gShift++;
;PCODE: $000002F1 VOL: 0
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
;PCODE: $000002F4 VOL: 0
; 0007 018B           if( gShift > 3 ) gShift = 0;
;PCODE: $000002F5 VOL: 0
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
; 0007 018C           PORTC = gCalValue0|(0x08>>gShift);
;PCODE: $000002FA VOL: 0
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
; 0007 018D           gCurState = 3;
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
; 0007 018E        }
; 0007 018F        else if( gCurState == 3 )
;PCODE: $00000303 VOL: 0
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
; 0007 0190        {
; 0007 0191           PORTC = gCalValue1;
;PCODE: $00000308 VOL: 0
;PCODE: $00000309 VOL: 0
; 0007 0192           gCurState = 4;
;PCODE: $0000030A VOL: 0
;PCODE: $0000030B VOL: 0
; 0007 0193        }
; 0007 0194        else if( gCurState == 4 )
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
;PCODE: $00000310 VOL: 0
; 0007 0195        {
; 0007 0196           gShift++;
;PCODE: $00000311 VOL: 0
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
;PCODE: $00000314 VOL: 0
; 0007 0197           if( gShift > 3 ) gShift = 0;
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
;PCODE: $00000317 VOL: 0
;PCODE: $00000318 VOL: 0
;PCODE: $00000319 VOL: 0
; 0007 0198           PORTC = gCalValue0|(0x08>>gShift);
;PCODE: $0000031A VOL: 0
;PCODE: $0000031B VOL: 0
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
;PCODE: $00000320 VOL: 0
; 0007 0199           gCurState = 5;
;PCODE: $00000321 VOL: 0
;PCODE: $00000322 VOL: 0
; 0007 019A        }
; 0007 019B        else if( gCurState == 5 )
;PCODE: $00000323 VOL: 0
;PCODE: $00000324 VOL: 0
;PCODE: $00000325 VOL: 0
;PCODE: $00000326 VOL: 0
;PCODE: $00000327 VOL: 0
; 0007 019C        {
; 0007 019D           gDutyOff = 0;
;PCODE: $00000328 VOL: 0
;PCODE: $00000329 VOL: 0
; 0007 019E           PORTC = gCalValue1;
;PCODE: $0000032A VOL: 0
;PCODE: $0000032B VOL: 0
; 0007 019F           gCurState = 6;
;PCODE: $0000032C VOL: 0
;PCODE: $0000032D VOL: 0
; 0007 01A0        }
; 0007 01A1        else if( gCurState == 6 )
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0
;PCODE: $00000330 VOL: 0
;PCODE: $00000331 VOL: 0
;PCODE: $00000332 VOL: 0
; 0007 01A2        {
; 0007 01A3           gDutyOff++;
;PCODE: $00000333 VOL: 0
;PCODE: $00000334 VOL: 0
;PCODE: $00000335 VOL: 0
;PCODE: $00000336 VOL: 0
; 0007 01A4           if( gDutyOff >8)
;PCODE: $00000337 VOL: 0
;PCODE: $00000338 VOL: 0
;PCODE: $00000339 VOL: 0
; 0007 01A5           {
; 0007 01A6              gCurState = 0;
;PCODE: $0000033A VOL: 0
;PCODE: $0000033B VOL: 0
; 0007 01A7              gElLoc++;
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
;PCODE: $0000033E VOL: 0
;PCODE: $0000033F VOL: 0
; 0007 01A8              if( gElLoc > 3 )
;PCODE: $00000340 VOL: 0
;PCODE: $00000341 VOL: 0
;PCODE: $00000342 VOL: 0
; 0007 01A9              {
; 0007 01AA                 PORTC = 0;
;PCODE: $00000343 VOL: 0
;PCODE: $00000344 VOL: 0
; 0007 01AB                 gElLoc = 0;
;PCODE: $00000345 VOL: 0
;PCODE: $00000346 VOL: 0
; 0007 01AC                 gElCompletFlag = TRUE;
;PCODE: $00000347 VOL: 0
;PCODE: $00000348 VOL: 0
; 0007 01AD              }
; 0007 01AE           }
;PCODE: $00000349 VOL: 0
; 0007 01AF        }
;PCODE: $0000034A VOL: 0
; 0007 01B0    }
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
;PCODE: $0000034D VOL: 0
;PCODE: $0000034E VOL: 0
;PCODE: $0000034F VOL: 0
;PCODE: $00000350 VOL: 0
;PCODE: $00000351 VOL: 0
; 0007 01B1 }
;PCODE: $00000352 VOL: 0
;PCODE: $00000353 VOL: 0
;PCODE: $00000354 VOL: 0
;PCODE: $00000355 VOL: 0
;
;void PulseGenerator6( void )
; 0007 01B4 {
;PCODE: $00000356 VOL: 0
;PCODE: $00000357 VOL: 0
; 0007 01B5      // Reinitialize Timer1 value
; 0007 01B6     TCNT1H=0xE600 >> 8;          //     0.4ms
;PCODE: $00000358 VOL: 0
;PCODE: $00000359 VOL: 0
; 0007 01B7     TCNT1L=0xE600 & 0xff;
;PCODE: $0000035A VOL: 0
;PCODE: $0000035B VOL: 0
; 0007 01B8 
; 0007 01B9     // Place your code here
; 0007 01BA     if( gRunFlag==TRUE && gElCompletFlag == FALSE )
;PCODE: $0000035C VOL: 0
;PCODE: $0000035D VOL: 0
;PCODE: $0000035E VOL: 0
;PCODE: $0000035F VOL: 0
;PCODE: $00000360 VOL: 0
;PCODE: $00000361 VOL: 0
;PCODE: $00000362 VOL: 0
;PCODE: $00000363 VOL: 0
;PCODE: $00000364 VOL: 0
;PCODE: $00000365 VOL: 0
; 0007 01BB     {
; 0007 01BC        if( gCurState == 0 )
;PCODE: $00000366 VOL: 0
;PCODE: $00000367 VOL: 0
;PCODE: $00000368 VOL: 0
; 0007 01BD        {
; 0007 01BE           gCalValue0 = gElMatrix[gElLoc]<<4 |(~gElMatrix[gElLoc])&0x0f; //((~gElMatrix[gElLoc]<<4)&0xf0)| gElMatrix[gElL ...
;PCODE: $00000369 VOL: 0
;PCODE: $0000036A VOL: 0
;PCODE: $0000036B VOL: 0
;PCODE: $0000036C VOL: 0
;PCODE: $0000036D VOL: 0
;PCODE: $0000036E VOL: 0
;PCODE: $0000036F VOL: 0
;PCODE: $00000370 VOL: 0
;PCODE: $00000371 VOL: 0
;PCODE: $00000372 VOL: 0
;PCODE: $00000373 VOL: 0
;PCODE: $00000374 VOL: 0
; 0007 01BF           gCalValue1 = gCalValue0&0x0f; // (~gElMatrix[gElLoc])&0x0f;
;PCODE: $00000375 VOL: 0
;PCODE: $00000376 VOL: 0
;PCODE: $00000377 VOL: 0
; 0007 01C0 
; 0007 01C1           PORTC = gCalValue0;
;PCODE: $00000378 VOL: 0
;PCODE: $00000379 VOL: 0
; 0007 01C2           gDutyOff = 0;
;PCODE: $0000037A VOL: 0
;PCODE: $0000037B VOL: 0
; 0007 01C3           gCurState = 1;
;PCODE: $0000037C VOL: 0
;PCODE: $0000037D VOL: 0
; 0007 01C4        }
; 0007 01C5        else if( gCurState == 1 )
;PCODE: $0000037E VOL: 0
;PCODE: $0000037F VOL: 0
;PCODE: $00000380 VOL: 0
;PCODE: $00000381 VOL: 0
;PCODE: $00000382 VOL: 0
; 0007 01C6        {
; 0007 01C7           gDutyOff++;
;PCODE: $00000383 VOL: 0
;PCODE: $00000384 VOL: 0
;PCODE: $00000385 VOL: 0
;PCODE: $00000386 VOL: 0
; 0007 01C8           if( gDutyOff >14 )gCurState = 2;
;PCODE: $00000387 VOL: 0
;PCODE: $00000388 VOL: 0
;PCODE: $00000389 VOL: 0
;PCODE: $0000038A VOL: 0
;PCODE: $0000038B VOL: 0
; 0007 01C9        }
;PCODE: $0000038C VOL: 0
; 0007 01CA        else if( gCurState == 2 )
;PCODE: $0000038D VOL: 0
;PCODE: $0000038E VOL: 0
;PCODE: $0000038F VOL: 0
;PCODE: $00000390 VOL: 0
;PCODE: $00000391 VOL: 0
; 0007 01CB        {
; 0007 01CC           gDutyOff = 0;
;PCODE: $00000392 VOL: 0
;PCODE: $00000393 VOL: 0
; 0007 01CD           PORTC = gCalValue1;
;PCODE: $00000394 VOL: 0
;PCODE: $00000395 VOL: 0
; 0007 01CE           gCurState = 3;
;PCODE: $00000396 VOL: 0
;PCODE: $00000397 VOL: 0
; 0007 01CF        }
; 0007 01D0        else if( gCurState == 3 )
;PCODE: $00000398 VOL: 0
;PCODE: $00000399 VOL: 0
;PCODE: $0000039A VOL: 0
;PCODE: $0000039B VOL: 0
;PCODE: $0000039C VOL: 0
; 0007 01D1        {
; 0007 01D2           PORTC = gCalValue0;
;PCODE: $0000039D VOL: 0
;PCODE: $0000039E VOL: 0
; 0007 01D3           gDutyOff++;
;PCODE: $0000039F VOL: 0
;PCODE: $000003A0 VOL: 0
;PCODE: $000003A1 VOL: 0
;PCODE: $000003A2 VOL: 0
; 0007 01D4           if( gDutyOff >15) gCurState = 4;
;PCODE: $000003A3 VOL: 0
;PCODE: $000003A4 VOL: 0
;PCODE: $000003A5 VOL: 0
;PCODE: $000003A6 VOL: 0
;PCODE: $000003A7 VOL: 0
; 0007 01D5        }
;PCODE: $000003A8 VOL: 0
; 0007 01D6        else if( gCurState == 4 )
;PCODE: $000003A9 VOL: 0
;PCODE: $000003AA VOL: 0
;PCODE: $000003AB VOL: 0
;PCODE: $000003AC VOL: 0
;PCODE: $000003AD VOL: 0
; 0007 01D7        {
; 0007 01D8           gDutyOff = 0;
;PCODE: $000003AE VOL: 0
;PCODE: $000003AF VOL: 0
; 0007 01D9           PORTC = gCalValue1;
;PCODE: $000003B0 VOL: 0
;PCODE: $000003B1 VOL: 0
; 0007 01DA           gCurState = 5;
;PCODE: $000003B2 VOL: 0
;PCODE: $000003B3 VOL: 0
; 0007 01DB        }
; 0007 01DC        else if( gCurState == 5 )
;PCODE: $000003B4 VOL: 0
;PCODE: $000003B5 VOL: 0
;PCODE: $000003B6 VOL: 0
;PCODE: $000003B7 VOL: 0
;PCODE: $000003B8 VOL: 0
; 0007 01DD        {
; 0007 01DE           PORTC = gCalValue0;
;PCODE: $000003B9 VOL: 0
;PCODE: $000003BA VOL: 0
; 0007 01DF           gDutyOff++;
;PCODE: $000003BB VOL: 0
;PCODE: $000003BC VOL: 0
;PCODE: $000003BD VOL: 0
;PCODE: $000003BE VOL: 0
; 0007 01E0           if( gDutyOff >15) gCurState = 6;
;PCODE: $000003BF VOL: 0
;PCODE: $000003C0 VOL: 0
;PCODE: $000003C1 VOL: 0
;PCODE: $000003C2 VOL: 0
;PCODE: $000003C3 VOL: 0
; 0007 01E1        }
;PCODE: $000003C4 VOL: 0
; 0007 01E2        else if( gCurState == 6 )
;PCODE: $000003C5 VOL: 0
;PCODE: $000003C6 VOL: 0
;PCODE: $000003C7 VOL: 0
;PCODE: $000003C8 VOL: 0
;PCODE: $000003C9 VOL: 0
; 0007 01E3        {
; 0007 01E4           gDutyOff = 0;
;PCODE: $000003CA VOL: 0
;PCODE: $000003CB VOL: 0
; 0007 01E5           PORTC = gCalValue1;
;PCODE: $000003CC VOL: 0
;PCODE: $000003CD VOL: 0
; 0007 01E6           gCurState = 7;
;PCODE: $000003CE VOL: 0
;PCODE: $000003CF VOL: 0
; 0007 01E7        }
; 0007 01E8        else if( gCurState == 7 )
;PCODE: $000003D0 VOL: 0
;PCODE: $000003D1 VOL: 0
;PCODE: $000003D2 VOL: 0
;PCODE: $000003D3 VOL: 0
;PCODE: $000003D4 VOL: 0
; 0007 01E9        {
; 0007 01EA           PORTC = gCalValue0;
;PCODE: $000003D5 VOL: 0
;PCODE: $000003D6 VOL: 0
; 0007 01EB           gDutyOff++;
;PCODE: $000003D7 VOL: 0
;PCODE: $000003D8 VOL: 0
;PCODE: $000003D9 VOL: 0
;PCODE: $000003DA VOL: 0
; 0007 01EC           if( gDutyOff >15) gCurState = 8;
;PCODE: $000003DB VOL: 0
;PCODE: $000003DC VOL: 0
;PCODE: $000003DD VOL: 0
;PCODE: $000003DE VOL: 0
;PCODE: $000003DF VOL: 0
; 0007 01ED        }
;PCODE: $000003E0 VOL: 0
; 0007 01EE        else if( gCurState == 8 )
;PCODE: $000003E1 VOL: 0
;PCODE: $000003E2 VOL: 0
;PCODE: $000003E3 VOL: 0
;PCODE: $000003E4 VOL: 0
;PCODE: $000003E5 VOL: 0
; 0007 01EF        {
; 0007 01F0           gDutyOff = 0;
;PCODE: $000003E6 VOL: 0
;PCODE: $000003E7 VOL: 0
; 0007 01F1           PORTC = gCalValue1;
;PCODE: $000003E8 VOL: 0
;PCODE: $000003E9 VOL: 0
; 0007 01F2           gCurState = 9;
;PCODE: $000003EA VOL: 0
;PCODE: $000003EB VOL: 0
; 0007 01F3        }
; 0007 01F4        else if( gCurState == 9 )
;PCODE: $000003EC VOL: 0
;PCODE: $000003ED VOL: 0
;PCODE: $000003EE VOL: 0
;PCODE: $000003EF VOL: 0
;PCODE: $000003F0 VOL: 0
; 0007 01F5        {
; 0007 01F6           PORTC = gCalValue0;
;PCODE: $000003F1 VOL: 0
;PCODE: $000003F2 VOL: 0
; 0007 01F7           gDutyOff++;
;PCODE: $000003F3 VOL: 0
;PCODE: $000003F4 VOL: 0
;PCODE: $000003F5 VOL: 0
;PCODE: $000003F6 VOL: 0
; 0007 01F8           if( gDutyOff >15) gCurState = 10;
;PCODE: $000003F7 VOL: 0
;PCODE: $000003F8 VOL: 0
;PCODE: $000003F9 VOL: 0
;PCODE: $000003FA VOL: 0
;PCODE: $000003FB VOL: 0
; 0007 01F9        }
;PCODE: $000003FC VOL: 0
; 0007 01FA        else if( gCurState == 10 )
;PCODE: $000003FD VOL: 0
;PCODE: $000003FE VOL: 0
;PCODE: $000003FF VOL: 0
;PCODE: $00000400 VOL: 0
;PCODE: $00000401 VOL: 0
; 0007 01FB        {
; 0007 01FC           gDutyOff = 0;
;PCODE: $00000402 VOL: 0
;PCODE: $00000403 VOL: 0
; 0007 01FD           PORTC = gCalValue1;
;PCODE: $00000404 VOL: 0
;PCODE: $00000405 VOL: 0
; 0007 01FE           gCurState = 11;
;PCODE: $00000406 VOL: 0
;PCODE: $00000407 VOL: 0
; 0007 01FF        }
; 0007 0200        else if( gCurState == 11 )
;PCODE: $00000408 VOL: 0
;PCODE: $00000409 VOL: 0
;PCODE: $0000040A VOL: 0
;PCODE: $0000040B VOL: 0
;PCODE: $0000040C VOL: 0
; 0007 0201        {
; 0007 0202           gDutyOff++;
;PCODE: $0000040D VOL: 0
;PCODE: $0000040E VOL: 0
;PCODE: $0000040F VOL: 0
;PCODE: $00000410 VOL: 0
; 0007 0203           if( gDutyOff > 363)     //150ms
;PCODE: $00000411 VOL: 0
;PCODE: $00000412 VOL: 0
;PCODE: $00000413 VOL: 0
; 0007 0204           {
; 0007 0205              gCurState = 0;
;PCODE: $00000414 VOL: 0
;PCODE: $00000415 VOL: 0
; 0007 0206              gElLoc++;
;PCODE: $00000416 VOL: 0
;PCODE: $00000417 VOL: 0
;PCODE: $00000418 VOL: 0
;PCODE: $00000419 VOL: 0
; 0007 0207              if( gElLoc > 3 )
;PCODE: $0000041A VOL: 0
;PCODE: $0000041B VOL: 0
;PCODE: $0000041C VOL: 0
; 0007 0208              {
; 0007 0209                 PORTC = 0x00;
;PCODE: $0000041D VOL: 0
;PCODE: $0000041E VOL: 0
; 0007 020A                 gElLoc = 0;
;PCODE: $0000041F VOL: 0
;PCODE: $00000420 VOL: 0
; 0007 020B                 gElCompletFlag = TRUE;
;PCODE: $00000421 VOL: 0
;PCODE: $00000422 VOL: 0
; 0007 020C              }
; 0007 020D           }
;PCODE: $00000423 VOL: 0
; 0007 020E        }
;PCODE: $00000424 VOL: 0
; 0007 020F    }
;PCODE: $00000425 VOL: 0
;PCODE: $00000426 VOL: 0
;PCODE: $00000427 VOL: 0
;PCODE: $00000428 VOL: 0
;PCODE: $00000429 VOL: 0
;PCODE: $0000042A VOL: 0
;PCODE: $0000042B VOL: 0
;PCODE: $0000042C VOL: 0
;PCODE: $0000042D VOL: 0
;PCODE: $0000042E VOL: 0
;PCODE: $0000042F VOL: 0
;PCODE: $00000430 VOL: 0
; 0007 0210 }
;PCODE: $00000431 VOL: 0
;PCODE: $00000432 VOL: 0
;PCODE: $00000433 VOL: 0
;
;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
; 0007 0213 {
;PCODE: $00000434 VOL: 0
;PCODE: $00000435 VOL: 0
; 0007 0214      if( gGenMode==FALSE )
;PCODE: $00000436 VOL: 0
;PCODE: $00000437 VOL: 0
;PCODE: $00000438 VOL: 0
; 0007 0215           PulseGenerator5();
;PCODE: $00000439 VOL: 0
; 0007 0216      else PulseGenerator6();
;PCODE: $0000043A VOL: 0
;PCODE: $0000043B VOL: 0
;PCODE: $0000043C VOL: 0
; 0007 0217 }
;PCODE: $0000043D VOL: 0
;PCODE: $0000043E VOL: 0
;PCODE: $0000043F VOL: 0
;PCODE: $00000440 VOL: 0
;
;void PortInit( void )
; 0007 021A {
;PCODE: $00000441 VOL: 0
;PCODE: $00000442 VOL: 0
; 0007 021B     // PORTA
; 0007 021C     // bit 7 : N.C
; 0007 021D     // bit 6 : N.C
; 0007 021E     // bit 5 : EPG 2 out(LED)
; 0007 021F     // bit 4 : EPG 1 out(LED)
; 0007 0220     // bit 3 : DAC7611 LD  out
; 0007 0221     // bit 2 : DAC7611 CS  out
; 0007 0222     // bit 1 : DAC7611 CLK out
; 0007 0223     // bit 0 : DAC7611 SDI out
; 0007 0224     DDRA    = 0x3f;
;PCODE: $00000443 VOL: 0
;PCODE: $00000444 VOL: 0
; 0007 0225     PORTA   = 0x04;
;PCODE: $00000445 VOL: 0
;PCODE: $00000446 VOL: 0
; 0007 0226 
; 0007 0227     //PORTB
; 0007 0228     // bit 7 : N.C
; 0007 0229     // bit 6 : LF398 Sample Hold out
; 0007 022A     // bit 5 : N.C
; 0007 022B     // bit 4 : N.C
; 0007 022C     // bit 3 : N.C
; 0007 022D     // bit 2 : N.C
; 0007 022E     // bit 1 : N.C
; 0007 022F     // bit 0 : N.C
; 0007 0230     DDRB    = 0x40;
;PCODE: $00000447 VOL: 0
;PCODE: $00000448 VOL: 0
; 0007 0231     PORTB   = 0x01;
;PCODE: $00000449 VOL: 0
;PCODE: $0000044A VOL: 0
; 0007 0232 
; 0007 0233     //PORTC
; 0007 0234     //bit 7: ELECT7
; 0007 0235     //bit 6: ELECT6
; 0007 0236     //bit 5: ELECT5
; 0007 0237     //bit 4: ELECT4
; 0007 0238     //bit 3: ELECT3
; 0007 0239     //bit 2: ELECT2
; 0007 023A     //bit 1: ELECT1
; 0007 023B     //bit 0: ELECT0
; 0007 023C     DDRC    = 0xff;
;PCODE: $0000044B VOL: 0
;PCODE: $0000044C VOL: 0
; 0007 023D     PORTC   = 0x00;
;PCODE: $0000044D VOL: 0
;PCODE: $0000044E VOL: 0
; 0007 023E 
; 0007 023F     //PORTD
; 0007 0240     //bit 7: (OUT) Voltage Read Select
; 0007 0241     //bit 6: NC
; 0007 0242     //bit 5: NC
; 0007 0243     //bit 4: (IN)FET destruction sen
; 0007 0244     //bit 3: TXD1
; 0007 0245     //bit 2: RXD1
; 0007 0246     //bit 1: NC
; 0007 0247     //bit 0: NC
; 0007 0248     DDRD    = 0x80;
;PCODE: $0000044F VOL: 0
;PCODE: $00000450 VOL: 0
; 0007 0249     PORTD   = 0x00;
;PCODE: $00000451 VOL: 0
;PCODE: $00000452 VOL: 0
; 0007 024A 
; 0007 024B     DDRE    = 0x12;
;PCODE: $00000453 VOL: 0
;PCODE: $00000454 VOL: 0
; 0007 024C     //PORTE   = 0x54;
; 0007 024D 
; 0007 024E     DDRF    = 0xC0;
;PCODE: $00000455 VOL: 0
;PCODE: $00000456 VOL: 0
; 0007 024F     PORTF   = 0x00;
;PCODE: $00000457 VOL: 0
;PCODE: $00000458 VOL: 0
; 0007 0250 
; 0007 0251     DDRG    = 0xff;
;PCODE: $00000459 VOL: 0
;PCODE: $0000045A VOL: 0
; 0007 0252     PORTG   = 0x00;
;PCODE: $0000045B VOL: 0
;PCODE: $0000045C VOL: 0
; 0007 0253 
; 0007 0254     // Timer/Counter 0 initialization
; 0007 0255     // Clock source: System Clock
; 0007 0256     // Clock value: 250.000 kHz
; 0007 0257     // Mode: Normal top=0xFF
; 0007 0258     // OC0 output: Disconnected
; 0007 0259     // Timer Period: 1 ms
; 0007 025A     ASSR=0;
;PCODE: $0000045D VOL: 0
;PCODE: $0000045E VOL: 0
; 0007 025B     TCCR0=0x04;
;PCODE: $0000045F VOL: 0
;PCODE: $00000460 VOL: 0
; 0007 025C     TCNT0=0x06;
;PCODE: $00000461 VOL: 0
;PCODE: $00000462 VOL: 0
; 0007 025D     OCR0=0x00;
;PCODE: $00000463 VOL: 0
;PCODE: $00000464 VOL: 0
; 0007 025E 
; 0007 025F    // Timer/Counter 1 initialization
; 0007 0260    // Clock source: System Clock
; 0007 0261    // Clock value: 2000.000 kHz
; 0007 0262    // Mode: Normal top=0xFFFF
; 0007 0263    // OC1A output: Disconnected
; 0007 0264    // OC1B output: Disconnected
; 0007 0265    // OC1C output: Disconnected
; 0007 0266    // Noise Canceler: Off
; 0007 0267    // Input Capture on Falling Edge
; 0007 0268    // Timer Period: 10 ms
; 0007 0269    // Timer1 Overflow Interrupt: On
; 0007 026A    // Input Capture Interrupt: Off
; 0007 026B    // Compare A Match Interrupt: Off
; 0007 026C    // Compare B Match Interrupt: Off
; 0007 026D    // Compare C Match Interrupt: Off
; 0007 026E    /*
; 0007 026F    TCCR1A=0x00;
; 0007 0270    TCCR1B=0x02;
; 0007 0271    TCNT1H=0xB1;
; 0007 0272    TCNT1L=0xE0;
; 0007 0273    ICR1H=0x00;
; 0007 0274    ICR1L=0x00;
; 0007 0275    OCR1AH=0x00;
; 0007 0276    OCR1AL=0x00;
; 0007 0277    OCR1BH=0x00;
; 0007 0278    OCR1BL=0x00;
; 0007 0279    OCR1CH=0x00;
; 0007 027A    */
; 0007 027B 
; 0007 027C // Timer/Counter 1 initialization
; 0007 027D // Clock source: System Clock
; 0007 027E // Clock value: 16000.000 kHz
; 0007 027F // Mode: Normal top=0xFFFF
; 0007 0280 // OC1A output: Disconnected
; 0007 0281 // OC1B output: Disconnected
; 0007 0282 // OC1C output: Disconnected
; 0007 0283 // Noise Canceler: Off
; 0007 0284 // Input Capture on Falling Edge
; 0007 0285 // Timer Period: 0.4 ms
; 0007 0286 // Timer1 Overflow Interrupt: On
; 0007 0287 // Input Capture Interrupt: Off
; 0007 0288 // Compare A Match Interrupt: Off
; 0007 0289 // Compare B Match Interrupt: Off
; 0007 028A // Compare C Match Interrupt: Off
; 0007 028B #if 0
; 0007 028C TCCR1A=0x00;
; 0007 028D TCCR1B= 0x01;
; 0007 028E TCNT1H=0xE7;
; 0007 028F TCNT1L=0x00;
; 0007 0290 #else
; 0007 0291  TCCR1A=0x00;
;PCODE: $00000465 VOL: 0
;PCODE: $00000466 VOL: 0
; 0007 0292  TCCR1B=0x01;
;PCODE: $00000467 VOL: 0
;PCODE: $00000468 VOL: 0
; 0007 0293  TCNT1H=0xC1;
;PCODE: $00000469 VOL: 0
;PCODE: $0000046A VOL: 0
; 0007 0294  TCNT1L=0x80;
;PCODE: $0000046B VOL: 0
;PCODE: $0000046C VOL: 0
; 0007 0295 #endif
; 0007 0296 ICR1H=0x00;
;PCODE: $0000046D VOL: 0
;PCODE: $0000046E VOL: 0
; 0007 0297 ICR1L=0x00;
;PCODE: $0000046F VOL: 0
;PCODE: $00000470 VOL: 0
; 0007 0298 OCR1AH=0x00;
;PCODE: $00000471 VOL: 0
;PCODE: $00000472 VOL: 0
; 0007 0299 OCR1AL=0x00;
;PCODE: $00000473 VOL: 0
;PCODE: $00000474 VOL: 0
; 0007 029A OCR1BH=0x00;
;PCODE: $00000475 VOL: 0
;PCODE: $00000476 VOL: 0
; 0007 029B OCR1BL=0x00;
;PCODE: $00000477 VOL: 0
;PCODE: $00000478 VOL: 0
; 0007 029C OCR1CH=0x00;
;PCODE: $00000479 VOL: 0
;PCODE: $0000047A VOL: 0
; 0007 029D OCR1CL=0x00;
;PCODE: $0000047B VOL: 0
;PCODE: $0000047C VOL: 0
; 0007 029E 
; 0007 029F    // Timer(s)/Counter(s) Interrupt(s) initialization
; 0007 02A0    TIMSK=0x05;
;PCODE: $0000047D VOL: 0
;PCODE: $0000047E VOL: 0
; 0007 02A1    ETIMSK=0x00;
;PCODE: $0000047F VOL: 0
;PCODE: $00000480 VOL: 0
; 0007 02A2 
; 0007 02A3 
; 0007 02A4 // USART0 initialization
; 0007 02A5 // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0007 02A6 // USART0 Receiver: On
; 0007 02A7 // USART0 Transmitter: On
; 0007 02A8 // USART0 Mode: Asynchronous
; 0007 02A9 // USART0 Baud Rate: 38400 (Double Speed Mode)
; 0007 02AA    UCSR0A=0x02;
;PCODE: $00000481 VOL: 0
;PCODE: $00000482 VOL: 0
; 0007 02AB    UCSR0B=0x98;
;PCODE: $00000483 VOL: 0
;PCODE: $00000484 VOL: 0
; 0007 02AC    UCSR0C=0x06;
;PCODE: $00000485 VOL: 0
;PCODE: $00000486 VOL: 0
; 0007 02AD    UBRR0H=0x00;
;PCODE: $00000487 VOL: 0
;PCODE: $00000488 VOL: 0
; 0007 02AE    UBRR0L=0x33;
;PCODE: $00000489 VOL: 0
;PCODE: $0000048A VOL: 0
; 0007 02AF 
; 0007 02B0    // USART1 initialization
; 0007 02B1    // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0007 02B2    // USART1 Receiver: On
; 0007 02B3    // USART1 Transmitter: On
; 0007 02B4    // USART1 Mode: Asynchronous
; 0007 02B5    // USART1 Baud Rate: 57600 (Double Speed Mode)
; 0007 02B6    UCSR1A=0x02;
;PCODE: $0000048B VOL: 0
;PCODE: $0000048C VOL: 0
; 0007 02B7    UCSR1B=0x98;
;PCODE: $0000048D VOL: 0
;PCODE: $0000048E VOL: 0
; 0007 02B8    UCSR1C=0x06;
;PCODE: $0000048F VOL: 0
;PCODE: $00000490 VOL: 0
; 0007 02B9    UBRR1H=0x00;
;PCODE: $00000491 VOL: 0
;PCODE: $00000492 VOL: 0
; 0007 02BA    UBRR1L=0x22;
;PCODE: $00000493 VOL: 0
;PCODE: $00000494 VOL: 0
; 0007 02BB 
; 0007 02BC    // ADC initialization
; 0007 02BD    // ADC Clock frequency: 1000.000 kHz
; 0007 02BE    // ADC Voltage Reference: AREF pin
; 0007 02BF    ADMUX  = 0x00 & 0xff;
;PCODE: $00000495 VOL: 0
;PCODE: $00000496 VOL: 0
; 0007 02C0    ADCSRA = 0x84;
;PCODE: $00000497 VOL: 0
;PCODE: $00000498 VOL: 0
; 0007 02C1 }
;PCODE: $00000499 VOL: 0
;PCODE: $0000049A VOL: 0
;
;void InitData(void)
; 0007 02C4 {
;PCODE: $0000049B VOL: 0
;PCODE: $0000049C VOL: 0
; 0007 02C5    gCurMode = CUR_INIT;
;PCODE: $0000049D VOL: 0
;PCODE: $0000049E VOL: 0
; 0007 02C6    gVoltage=100;
;PCODE: $0000049F VOL: 0
;PCODE: $000004A0 VOL: 0
; 0007 02C7    gMode=0;
;PCODE: $000004A1 VOL: 0
;PCODE: $000004A2 VOL: 0
; 0007 02C8    gRunFlag = FALSE;
;PCODE: $000004A3 VOL: 0
;PCODE: $000004A4 VOL: 0
; 0007 02C9    gDepth=0;
;PCODE: $000004A5 VOL: 0
;PCODE: $000004A6 VOL: 0
; 0007 02CA    gSpeed=1;
;PCODE: $000004A7 VOL: 0
;PCODE: $000004A8 VOL: 0
; 0007 02CB    gFlag=0;
;PCODE: $000004A9 VOL: 0
;PCODE: $000004AA VOL: 0
; 0007 02CC    gError = (1<<ERROR_NOTLCD);
;PCODE: $000004AB VOL: 0
;PCODE: $000004AC VOL: 0
; 0007 02CD    gDose = 0;
;PCODE: $000004AD VOL: 0
;PCODE: $000004AE VOL: 0
; 0007 02CE 
; 0007 02CF    // A B C D
; 0007 02D0    // - - + -
; 0007 02D1    // - - - +
; 0007 02D2    // + - - -
; 0007 02D3    // - + - -
; 0007 02D4    gElMatrix[0] = 0x02;
;PCODE: $000004AF VOL: 0
;PCODE: $000004B0 VOL: 0
; 0007 02D5    gElMatrix[1] = 0x01;
;PCODE: $000004B1 VOL: 0
;PCODE: $000004B2 VOL: 0
;PCODE: $000004B3 VOL: 0
; 0007 02D6    gElMatrix[2] = 0x08;
;PCODE: $000004B4 VOL: 0
;PCODE: $000004B5 VOL: 0
;PCODE: $000004B6 VOL: 0
; 0007 02D7    gElMatrix[3] = 0x04;
;PCODE: $000004B7 VOL: 0
;PCODE: $000004B8 VOL: 0
;PCODE: $000004B9 VOL: 0
; 0007 02D8 }
;PCODE: $000004BA VOL: 0
;PCODE: $000004BB VOL: 0
;void InitSettingData(void)
; 0007 02DA {
;PCODE: $000004BC VOL: 0
;PCODE: $000004BD VOL: 0
; 0007 02DB    DAC7611_WriteVoltage(gVoltage);
;PCODE: $000004BE VOL: 0
;PCODE: $000004BF VOL: 0
; 0007 02DC }
;PCODE: $000004C0 VOL: 0
;PCODE: $000004C1 VOL: 0
;
;void SystemInit( void )
; 0007 02DF {
;PCODE: $000004C2 VOL: 0
;PCODE: $000004C3 VOL: 0
; 0007 02E0    PortInit();
;PCODE: $000004C4 VOL: 0
; 0007 02E1    InitData();
;PCODE: $000004C5 VOL: 0
; 0007 02E2 
; 0007 02E3    LoadInEeprom();
;PCODE: $000004C6 VOL: 0
; 0007 02E4 
; 0007 02E5    DAC7611_init(  );
;PCODE: $000004C7 VOL: 0
; 0007 02E6 
; 0007 02E7    InitSettingData();
;PCODE: $000004C8 VOL: 0
; 0007 02E8 
; 0007 02E9    gGenMode = PINB.0?TRUE:FALSE;
;PCODE: $000004C9 VOL: 0
;PCODE: $000004CA VOL: 0
;PCODE: $000004CB VOL: 0
;PCODE: $000004CC VOL: 0
;PCODE: $000004CD VOL: 0
;PCODE: $000004CE VOL: 0
;PCODE: $000004CF VOL: 0
;PCODE: $000004D0 VOL: 0
;PCODE: $000004D1 VOL: 0
;PCODE: $000004D2 VOL: 0
; 0007 02EA 
; 0007 02EB    if( gGenMode==TRUE )
;PCODE: $000004D3 VOL: 0
;PCODE: $000004D4 VOL: 0
;PCODE: $000004D5 VOL: 0
; 0007 02EC    {
; 0007 02ED      HIGH_PGM2_LED;
;PCODE: $000004D6 VOL: 0
;PCODE: $000004D7 VOL: 0
; 0007 02EE      // A B C D
; 0007 02EF      // + + - -
; 0007 02F0      // + - + -
; 0007 02F1      // + - - +
; 0007 02F2      // + - + -
; 0007 02F3      gElMatrix[0] = 0x0C;
;PCODE: $000004D8 VOL: 0
;PCODE: $000004D9 VOL: 0
; 0007 02F4      gElMatrix[1] = 0x0A;
;PCODE: $000004DA VOL: 0
;PCODE: $000004DB VOL: 0
;PCODE: $000004DC VOL: 0
; 0007 02F5      gElMatrix[2] = 0x09;
;PCODE: $000004DD VOL: 0
;PCODE: $000004DE VOL: 0
;PCODE: $000004DF VOL: 0
; 0007 02F6      gElMatrix[3] = 0x0A;
;PCODE: $000004E0 VOL: 0
;PCODE: $000004E1 VOL: 0
;PCODE: $000004E2 VOL: 0
; 0007 02F7 
; 0007 02F8      TCCR1A=0x00;
;PCODE: $000004E3 VOL: 0
;PCODE: $000004E4 VOL: 0
; 0007 02F9      TCCR1B=0x01;
;PCODE: $000004E5 VOL: 0
;PCODE: $000004E6 VOL: 0
; 0007 02FA      TCNT1H=0xE7;
;PCODE: $000004E7 VOL: 0
;PCODE: $000004E8 VOL: 0
; 0007 02FB      TCNT1L=0x00;
;PCODE: $000004E9 VOL: 0
;PCODE: $000004EA VOL: 0
; 0007 02FC    }
; 0007 02FD    else
;PCODE: $000004EB VOL: 0
;PCODE: $000004EC VOL: 0
; 0007 02FE    {
; 0007 02FF      //TCCR1B= 0x02;
; 0007 0300      HIGH_PGM1_LED;
;PCODE: $000004ED VOL: 0
;PCODE: $000004EE VOL: 0
; 0007 0301 
; 0007 0302      // A B C D
; 0007 0303      // - - + -
; 0007 0304      // - - - +
; 0007 0305      // + - - -
; 0007 0306      // - + - -
; 0007 0307      gElMatrix[0] = 0x02;
;PCODE: $000004EF VOL: 0
;PCODE: $000004F0 VOL: 0
; 0007 0308      gElMatrix[1] = 0x01;
;PCODE: $000004F1 VOL: 0
;PCODE: $000004F2 VOL: 0
;PCODE: $000004F3 VOL: 0
; 0007 0309      gElMatrix[2] = 0x08;
;PCODE: $000004F4 VOL: 0
;PCODE: $000004F5 VOL: 0
;PCODE: $000004F6 VOL: 0
; 0007 030A      gElMatrix[3] = 0x04;
;PCODE: $000004F7 VOL: 0
;PCODE: $000004F8 VOL: 0
;PCODE: $000004F9 VOL: 0
; 0007 030B 
; 0007 030C      #if 0  //10ms
; 0007 030D         TCCR1A=0x00;
; 0007 030E         TCCR1B=0x02;
; 0007 030F         TCNT1H=0xB1;
; 0007 0310         TCNT1L=0xE0;
; 0007 0311     #else   //1ms
; 0007 0312         TCCR1A=0x00;
;PCODE: $000004FA VOL: 0
;PCODE: $000004FB VOL: 0
; 0007 0313         TCCR1B=0x01;
;PCODE: $000004FC VOL: 0
;PCODE: $000004FD VOL: 0
; 0007 0314         TCNT1H=0xC1;
;PCODE: $000004FE VOL: 0
;PCODE: $000004FF VOL: 0
; 0007 0315         TCNT1L=0x80;
;PCODE: $00000500 VOL: 0
;PCODE: $00000501 VOL: 0
; 0007 0316     #endif
; 0007 0317 
; 0007 0318 
; 0007 0319      /*
; 0007 031A      TCCR1A=0x00;
; 0007 031B      TCCR1B=0x02;
; 0007 031C      TCNT1H=0xB1;
; 0007 031D      TCNT1L=0xE0;
; 0007 031E      */
; 0007 031F    }
;PCODE: $00000502 VOL: 0
; 0007 0320 }
;PCODE: $00000503 VOL: 0
;PCODE: $00000504 VOL: 0
;
;
;BYTE WaitEvent( void )
; 0007 0324 {
;PCODE: $00000505 VOL: 0
;PCODE: $00000506 VOL: 0
; 0007 0325 
; 0007 0326     while ( 1 )
;PCODE: $00000507 VOL: 0
; 0007 0327     {
; 0007 0328        if( IPC_Get_RxCount0() >=  sizeof( IPC_HEADER ) )
;PCODE: $00000508 VOL: 0
;PCODE: $00000509 VOL: 0
;PCODE: $0000050A VOL: 0
; 0007 0329        {
; 0007 032A            goldTime1ms = gTime1ms;
;PCODE: $0000050B VOL: 0
;PCODE: $0000050C VOL: 0
; 0007 032B            return EVN_RCVUART0;
;PCODE: $0000050D VOL: 0
;PCODE: $0000050E VOL: 0
; 0007 032C        }
; 0007 032D        else if( IPC_Get_RxCount1() >=  sizeof( IPC_HEADER ) )
;PCODE: $0000050F VOL: 0
;PCODE: $00000510 VOL: 0
;PCODE: $00000511 VOL: 0
;PCODE: $00000512 VOL: 0
; 0007 032E        {
; 0007 032F            goldTime1ms = gTime1ms;
;PCODE: $00000513 VOL: 0
;PCODE: $00000514 VOL: 0
; 0007 0330            return EVN_RCVUART1;
;PCODE: $00000515 VOL: 0
;PCODE: $00000516 VOL: 0
; 0007 0331        }
; 0007 0332        else if( (gTime1ms-goldTime1ms) > 300 ) // 50=200ms
;PCODE: $00000517 VOL: 0
;PCODE: $00000518 VOL: 0
;PCODE: $00000519 VOL: 0
;PCODE: $0000051A VOL: 0
;PCODE: $0000051B VOL: 0
;PCODE: $0000051C VOL: 0
; 0007 0333        {
; 0007 0334          /* if( (gTime1ms- gOldUartTime1ms) > 6000 )
; 0007 0335           {
; 0007 0336              gOldUartTime1ms = gTime1ms;
; 0007 0337              if( IPC_Get_RxCount1() > 0 )
; 0007 0338              {
; 0007 0339                 IPC_ResetCount1();
; 0007 033A              }
; 0007 033B           }
; 0007 033C           */
; 0007 033D           goldTime1ms = gTime1ms;
;PCODE: $0000051D VOL: 0
;PCODE: $0000051E VOL: 0
; 0007 033E 
; 0007 033F           return EVN_TIMEOVER;
;PCODE: $0000051F VOL: 0
;PCODE: $00000520 VOL: 0
; 0007 0340        }
; 0007 0341     }
;PCODE: $00000521 VOL: 0
;PCODE: $00000522 VOL: 0
;PCODE: $00000523 VOL: 0
;PCODE: $00000524 VOL: 0
;PCODE: $00000525 VOL: 0
; 0007 0342 }
;PCODE: $00000526 VOL: 0
;PCODE: $00000527 VOL: 0
;
;void SaveInEeprom( void )
; 0007 0345 {
;PCODE: $00000528 VOL: 0
;PCODE: $00000529 VOL: 0
; 0007 0346    EEPROM_BODY mEDat;
; 0007 0347 
; 0007 0348    memset((void *)&mEDat,0 ,sizeof( EEPROM_BODY));
;PCODE: $0000052A VOL: 0
;	mEDat -> Y+0
;PCODE: $0000052B VOL: 0
;PCODE: $0000052C VOL: 0
;PCODE: $0000052D VOL: 0
;PCODE: $0000052E VOL: 0
;PCODE: $0000052F VOL: 0
;PCODE: $00000530 VOL: 0
;PCODE: $00000531 VOL: 0
; 0007 0349 
; 0007 034A    mEDat.AkFlag = 'A';
;PCODE: $00000532 VOL: 0
;PCODE: $00000533 VOL: 0
; 0007 034B    mEDat.Run  = gRunFlag?1:0;
;PCODE: $00000534 VOL: 0
;PCODE: $00000535 VOL: 0
;PCODE: $00000536 VOL: 0
;PCODE: $00000537 VOL: 0
;PCODE: $00000538 VOL: 0
;PCODE: $00000539 VOL: 0
;PCODE: $0000053A VOL: 0
;PCODE: $0000053B VOL: 0
;PCODE: $0000053C VOL: 0
;PCODE: $0000053D VOL: 0
; 0007 034C    mEDat.Dose1 = (BYTE)((gDose>>8)&0xff);
;PCODE: $0000053E VOL: 0
;PCODE: $0000053F VOL: 0
;PCODE: $00000540 VOL: 0
;PCODE: $00000541 VOL: 0
; 0007 034D    mEDat.Dose2 = (BYTE)(gDose&0xff);
;PCODE: $00000542 VOL: 0
;PCODE: $00000543 VOL: 0
;PCODE: $00000544 VOL: 0
; 0007 034E    mEDat.Voltage = gVoltage ;
;PCODE: $00000545 VOL: 0
;PCODE: $00000546 VOL: 0
; 0007 034F    mEDat.Depth = gDepth;
;PCODE: $00000547 VOL: 0
;PCODE: $00000548 VOL: 0
; 0007 0350    mEDat.Speed = gSpeed;
;PCODE: $00000549 VOL: 0
;PCODE: $0000054A VOL: 0
; 0007 0351    mEDat.Flag  = gFlag;
;PCODE: $0000054B VOL: 0
;PCODE: $0000054C VOL: 0
; 0007 0352    mEDat.Map1  = (gElMatrix[0]<<4)&0xf0 | gElMatrix[1]&0x0f;
;PCODE: $0000054D VOL: 0
;PCODE: $0000054E VOL: 0
;PCODE: $0000054F VOL: 0
;PCODE: $00000550 VOL: 0
;PCODE: $00000551 VOL: 0
;PCODE: $00000552 VOL: 0
;PCODE: $00000553 VOL: 0
;PCODE: $00000554 VOL: 0
;PCODE: $00000555 VOL: 0
; 0007 0353    mEDat.Map2  = (gElMatrix[2]<<4)&0xf0 | gElMatrix[3]&0x0f;
;PCODE: $00000556 VOL: 0
;PCODE: $00000557 VOL: 0
;PCODE: $00000558 VOL: 0
;PCODE: $00000559 VOL: 0
;PCODE: $0000055A VOL: 0
;PCODE: $0000055B VOL: 0
;PCODE: $0000055C VOL: 0
;PCODE: $0000055D VOL: 0
;PCODE: $0000055E VOL: 0
;PCODE: $0000055F VOL: 0
; 0007 0354    E2pWriteLen((BYTE*)&mEDat, E_EP_MODE, sizeof( EEPROM_BODY));
;PCODE: $00000560 VOL: 0
;PCODE: $00000561 VOL: 0
;PCODE: $00000562 VOL: 0
;PCODE: $00000563 VOL: 0
;PCODE: $00000564 VOL: 0
;PCODE: $00000565 VOL: 0
; 0007 0355 }
;PCODE: $00000566 VOL: 0
;PCODE: $00000567 VOL: 0
;PCODE: $00000568 VOL: 0
;
;void LoadInEeprom( void )
; 0007 0358 {
;PCODE: $00000569 VOL: 0
;PCODE: $0000056A VOL: 0
; 0007 0359    BYTE mData[20];
; 0007 035A    LPEEPROM_BODY mEDat;
; 0007 035B 
; 0007 035C    memset((void *)&mData,0 ,20 );
;PCODE: $0000056B VOL: 0
;PCODE: $0000056C VOL: 0
;PCODE: $0000056D VOL: 0
;	mData -> Y+2
;	*mEDat -> R16,R17
;PCODE: $0000056E VOL: 0
;PCODE: $0000056F VOL: 0
;PCODE: $00000570 VOL: 0
;PCODE: $00000571 VOL: 0
;PCODE: $00000572 VOL: 0
;PCODE: $00000573 VOL: 0
;PCODE: $00000574 VOL: 0
; 0007 035D    E2pReadLen( mData, E_EP_MODE, sizeof( EEPROM_BODY));
;PCODE: $00000575 VOL: 0
;PCODE: $00000576 VOL: 0
;PCODE: $00000577 VOL: 0
;PCODE: $00000578 VOL: 0
;PCODE: $00000579 VOL: 0
;PCODE: $0000057A VOL: 0
; 0007 035E    mEDat =(LPEEPROM_BODY)mData ;
;PCODE: $0000057B VOL: 0
;PCODE: $0000057C VOL: 0
; 0007 035F 
; 0007 0360    if( mEDat->AkFlag == 'A' )
;PCODE: $0000057D VOL: 0
;PCODE: $0000057E VOL: 0
;PCODE: $0000057F VOL: 0
;PCODE: $00000580 VOL: 0
; 0007 0361    {
; 0007 0362       gMode = 0; //= mEDat->Mode;
;PCODE: $00000581 VOL: 0
;PCODE: $00000582 VOL: 0
; 0007 0363       //gRunFlag = mEDat->Run?TRUE:FALSE;
; 0007 0364       gDose = (int)mEDat->Dose1<<8|mEDat->Dose2;
;PCODE: $00000583 VOL: 0
;PCODE: $00000584 VOL: 0
;PCODE: $00000585 VOL: 0
;PCODE: $00000586 VOL: 0
;PCODE: $00000587 VOL: 0
;PCODE: $00000588 VOL: 0
;PCODE: $00000589 VOL: 0
;PCODE: $0000058A VOL: 0
;PCODE: $0000058B VOL: 0
; 0007 0365       if( gDose < 0 ) gDose = 0;
;PCODE: $0000058C VOL: 0
;PCODE: $0000058D VOL: 0
;PCODE: $0000058E VOL: 0
;PCODE: $0000058F VOL: 0
;PCODE: $00000590 VOL: 0
; 0007 0366       if( gDose > 3 ) gDose = 3;
;PCODE: $00000591 VOL: 0
;PCODE: $00000592 VOL: 0
;PCODE: $00000593 VOL: 0
;PCODE: $00000594 VOL: 0
;PCODE: $00000595 VOL: 0
;PCODE: $00000596 VOL: 0
; 0007 0367 
; 0007 0368       gVoltage = mEDat->Voltage;
;PCODE: $00000597 VOL: 0
;PCODE: $00000598 VOL: 0
;PCODE: $00000599 VOL: 0
;PCODE: $0000059A VOL: 0
;PCODE: $0000059B VOL: 0
; 0007 0369       if( gVoltage < 60 ) gVoltage = 60;
;PCODE: $0000059C VOL: 0
;PCODE: $0000059D VOL: 0
;PCODE: $0000059E VOL: 0
;PCODE: $0000059F VOL: 0
;PCODE: $000005A0 VOL: 0
; 0007 036A       if( gVoltage > 120 ) gVoltage = 120;
;PCODE: $000005A1 VOL: 0
;PCODE: $000005A2 VOL: 0
;PCODE: $000005A3 VOL: 0
;PCODE: $000005A4 VOL: 0
;PCODE: $000005A5 VOL: 0
;PCODE: $000005A6 VOL: 0
; 0007 036B 
; 0007 036C       gDepth = mEDat->Depth;
;PCODE: $000005A7 VOL: 0
;PCODE: $000005A8 VOL: 0
;PCODE: $000005A9 VOL: 0
;PCODE: $000005AA VOL: 0
;PCODE: $000005AB VOL: 0
; 0007 036D       if( gDepth < 0 ) gDepth = 0;
;PCODE: $000005AC VOL: 0
;PCODE: $000005AD VOL: 0
;PCODE: $000005AE VOL: 0
;PCODE: $000005AF VOL: 0
;PCODE: $000005B0 VOL: 0
; 0007 036E       if( gDepth > 3 ) gDepth = 3;
;PCODE: $000005B1 VOL: 0
;PCODE: $000005B2 VOL: 0
;PCODE: $000005B3 VOL: 0
;PCODE: $000005B4 VOL: 0
;PCODE: $000005B5 VOL: 0
;PCODE: $000005B6 VOL: 0
; 0007 036F 
; 0007 0370       gSpeed = mEDat->Speed;
;PCODE: $000005B7 VOL: 0
;PCODE: $000005B8 VOL: 0
;PCODE: $000005B9 VOL: 0
;PCODE: $000005BA VOL: 0
;PCODE: $000005BB VOL: 0
; 0007 0371       if( gSpeed < 0 ) gSpeed = 0;
;PCODE: $000005BC VOL: 0
;PCODE: $000005BD VOL: 0
;PCODE: $000005BE VOL: 0
;PCODE: $000005BF VOL: 0
;PCODE: $000005C0 VOL: 0
; 0007 0372       if( gSpeed > 2 ) gSpeed = 2;
;PCODE: $000005C1 VOL: 0
;PCODE: $000005C2 VOL: 0
;PCODE: $000005C3 VOL: 0
;PCODE: $000005C4 VOL: 0
;PCODE: $000005C5 VOL: 0
;PCODE: $000005C6 VOL: 0
; 0007 0373 
; 0007 0374       gFlag = mEDat->Flag;
;PCODE: $000005C7 VOL: 0
;PCODE: $000005C8 VOL: 0
;PCODE: $000005C9 VOL: 0
;PCODE: $000005CA VOL: 0
; 0007 0375       gElMatrix[0] = (mEDat->Map1>>4)&0x0f;
;PCODE: $000005CB VOL: 0
;PCODE: $000005CC VOL: 0
;PCODE: $000005CD VOL: 0
;PCODE: $000005CE VOL: 0
;PCODE: $000005CF VOL: 0
; 0007 0376       gElMatrix[1] = mEDat->Map1&0x0f;
;PCODE: $000005D0 VOL: 0
;PCODE: $000005D1 VOL: 0
;PCODE: $000005D2 VOL: 0
;PCODE: $000005D3 VOL: 0
;PCODE: $000005D4 VOL: 0
;PCODE: $000005D5 VOL: 0
; 0007 0377       gElMatrix[2] = (mEDat->Map2>>4)&0x0f;
;PCODE: $000005D6 VOL: 0
;PCODE: $000005D7 VOL: 0
;PCODE: $000005D8 VOL: 0
;PCODE: $000005D9 VOL: 0
;PCODE: $000005DA VOL: 0
;PCODE: $000005DB VOL: 0
; 0007 0378       gElMatrix[3] = mEDat->Map2&0x0f;
;PCODE: $000005DC VOL: 0
;PCODE: $000005DD VOL: 0
;PCODE: $000005DE VOL: 0
;PCODE: $000005DF VOL: 0
;PCODE: $000005E0 VOL: 0
;PCODE: $000005E1 VOL: 0
; 0007 0379 
; 0007 037A       if( gVoltage > 50 ) LOW_VOLRY;
;PCODE: $000005E2 VOL: 0
;PCODE: $000005E3 VOL: 0
;PCODE: $000005E4 VOL: 0
;PCODE: $000005E5 VOL: 0
;PCODE: $000005E6 VOL: 0
; 0007 037B       else  HIGH_VOLRY;
;PCODE: $000005E7 VOL: 0
;PCODE: $000005E8 VOL: 0
;PCODE: $000005E9 VOL: 0
;PCODE: $000005EA VOL: 0
; 0007 037C    }
;PCODE: $000005EB VOL: 0
; 0007 037D    else
;PCODE: $000005EC VOL: 0
;PCODE: $000005ED VOL: 0
; 0007 037E    {
; 0007 037F       InitData();
;PCODE: $000005EE VOL: 0
; 0007 0380       SaveInEeprom();
;PCODE: $000005EF VOL: 0
; 0007 0381    }
;PCODE: $000005F0 VOL: 0
; 0007 0382 }
;PCODE: $000005F1 VOL: 0
;PCODE: $000005F2 VOL: 0
;PCODE: $000005F3 VOL: 0
;PCODE: $000005F4 VOL: 0
;PCODE: $000005F5 VOL: 0
;PCODE: $000005F6 VOL: 0
;PCODE: $000005F7 VOL: 0
;
;void ADCProcessor( void )
; 0007 0385 {
;PCODE: $000005F8 VOL: 0
;PCODE: $000005F9 VOL: 0
; 0007 0386    // 0: Heat Protect
; 0007 0387    // 1: output voltage
; 0007 0388    // 2: elect current
; 0007 0389    int mIndexVol=0;
; 0007 038A    int mVol;
; 0007 038B    int mTemp;
; 0007 038C    float mCalvol;
; 0007 038D    mVol= read_adc( gAdcLoc );
;PCODE: $000005FA VOL: 0
;PCODE: $000005FB VOL: 0
;	mIndexVol -> R16,R17
;	mVol -> R18,R19
;	mTemp -> R20,R21
;	mCalvol -> Y+6
;PCODE: $000005FC VOL: 0
;PCODE: $000005FD VOL: 0
;PCODE: $000005FE VOL: 0
;PCODE: $000005FF VOL: 0
;PCODE: $00000600 VOL: 0
; 0007 038E 
; 0007 038F    if( gAdcLoc == 0 )
;PCODE: $00000601 VOL: 0
;PCODE: $00000602 VOL: 0
;PCODE: $00000603 VOL: 0
; 0007 0390    {
; 0007 0391       if( mVol > 25)
;PCODE: $00000604 VOL: 0
;PCODE: $00000605 VOL: 0
;PCODE: $00000606 VOL: 0
; 0007 0392       {
; 0007 0393          gError |= (1<<ERROR_HEATSINK);  //2.5V
;PCODE: $00000607 VOL: 0
;PCODE: $00000608 VOL: 0
;PCODE: $00000609 VOL: 0
; 0007 0394          gCurMode =  CUR_ERROR;
;PCODE: $0000060A VOL: 0
;PCODE: $0000060B VOL: 0
; 0007 0395       }
; 0007 0396       else
;PCODE: $0000060C VOL: 0
;PCODE: $0000060D VOL: 0
; 0007 0397       {
; 0007 0398          gError &= ~(1<<ERROR_HEATSINK);  //2.5V
;PCODE: $0000060E VOL: 0
;PCODE: $0000060F VOL: 0
;PCODE: $00000610 VOL: 0
; 0007 0399       }
;PCODE: $00000611 VOL: 0
; 0007 039A    }
; 0007 039B    else if( gAdcLoc == 1 )
;PCODE: $00000612 VOL: 0
;PCODE: $00000613 VOL: 0
;PCODE: $00000614 VOL: 0
;PCODE: $00000615 VOL: 0
;PCODE: $00000616 VOL: 0
; 0007 039C    {
; 0007 039D       if( gMode == MODE_READY && gFlag == FLAG_VOLADJ )
;PCODE: $00000617 VOL: 0
;PCODE: $00000618 VOL: 0
;PCODE: $00000619 VOL: 0
;PCODE: $0000061A VOL: 0
;PCODE: $0000061B VOL: 0
;PCODE: $0000061C VOL: 0
;PCODE: $0000061D VOL: 0
;PCODE: $0000061E VOL: 0
;PCODE: $0000061F VOL: 0
;PCODE: $00000620 VOL: 0
; 0007 039E       {
; 0007 039F 
; 0007 03A0         if( gVoltage> 50 )
;PCODE: $00000621 VOL: 0
;PCODE: $00000622 VOL: 0
;PCODE: $00000623 VOL: 0
; 0007 03A1         {
; 0007 03A2            if( gVolChkCount > 0 )
;PCODE: $00000624 VOL: 0
;PCODE: $00000625 VOL: 0
;PCODE: $00000626 VOL: 0
; 0007 03A3            {
; 0007 03A4               gVolChkCount--;
;PCODE: $00000627 VOL: 0
;PCODE: $00000628 VOL: 0
;PCODE: $00000629 VOL: 0
;PCODE: $0000062A VOL: 0
; 0007 03A5            }
; 0007 03A6            else   //2*600ms = 1.2sec
;PCODE: $0000062B VOL: 0
;PCODE: $0000062C VOL: 0
; 0007 03A7            {
; 0007 03A8               if(gVoltage < 20 ) mIndexVol = 0;
;PCODE: $0000062D VOL: 0
;PCODE: $0000062E VOL: 0
;PCODE: $0000062F VOL: 0
;PCODE: $00000630 VOL: 0
;PCODE: $00000631 VOL: 0
; 0007 03A9               else  mIndexVol = (gVoltage-20)/10;
;PCODE: $00000632 VOL: 0
;PCODE: $00000633 VOL: 0
;PCODE: $00000634 VOL: 0
;PCODE: $00000635 VOL: 0
;PCODE: $00000636 VOL: 0
;PCODE: $00000637 VOL: 0
;PCODE: $00000638 VOL: 0
; 0007 03AA 
; 0007 03AB               mCalvol = DacArray[mIndexVol];
;PCODE: $00000639 VOL: 0
;PCODE: $0000063A VOL: 0
;PCODE: $0000063B VOL: 0
;PCODE: $0000063C VOL: 0
;PCODE: $0000063D VOL: 0
;PCODE: $0000063E VOL: 0
;PCODE: $0000063F VOL: 0
; 0007 03AC 
; 0007 03AD               //gReadVol =(int)(60.0f+(float)mVol*2.2f);
; 0007 03AE 
; 0007 03AF               if( (float)mVol > (mCalvol-mCalvol*0.2f) &&
; 0007 03B0                   (float)mVol < (mCalvol+mCalvol*0.2f) )
;PCODE: $00000640 VOL: 0
;PCODE: $00000641 VOL: 0
;PCODE: $00000642 VOL: 0
;PCODE: $00000643 VOL: 0
;PCODE: $00000644 VOL: 0
;PCODE: $00000645 VOL: 0
;PCODE: $00000646 VOL: 0
;PCODE: $00000647 VOL: 0
;PCODE: $00000648 VOL: 0
;PCODE: $00000649 VOL: 0
;PCODE: $0000064A VOL: 0
;PCODE: $0000064B VOL: 0
;PCODE: $0000064C VOL: 0
;PCODE: $0000064D VOL: 0
;PCODE: $0000064E VOL: 0
;PCODE: $0000064F VOL: 0
;PCODE: $00000650 VOL: 0
;PCODE: $00000651 VOL: 0
;PCODE: $00000652 VOL: 0
;PCODE: $00000653 VOL: 0
;PCODE: $00000654 VOL: 0
;PCODE: $00000655 VOL: 0
;PCODE: $00000656 VOL: 0
;PCODE: $00000657 VOL: 0
;PCODE: $00000658 VOL: 0
;PCODE: $00000659 VOL: 0
;PCODE: $0000065A VOL: 0
; 0007 03B1               {
; 0007 03B2 
; 0007 03B3                  gFlag = FLAG_READY;
;PCODE: $0000065B VOL: 0
;PCODE: $0000065C VOL: 0
; 0007 03B4                  if( gError & (1<<ERROR_VOL) )
;PCODE: $0000065D VOL: 0
;PCODE: $0000065E VOL: 0
;PCODE: $0000065F VOL: 0
; 0007 03B5                  {
; 0007 03B6                      gVolAdjCount++; //300ms
;PCODE: $00000660 VOL: 0
;PCODE: $00000661 VOL: 0
;PCODE: $00000662 VOL: 0
;PCODE: $00000663 VOL: 0
; 0007 03B7                      if( gVolAdjCount > 3 )  //300ms*3
;PCODE: $00000664 VOL: 0
;PCODE: $00000665 VOL: 0
;PCODE: $00000666 VOL: 0
; 0007 03B8                      {
; 0007 03B9                         gVolAdjCount = 0;
;PCODE: $00000667 VOL: 0
;PCODE: $00000668 VOL: 0
; 0007 03BA                         gError &= ~(1<<ERROR_VOL);  //2.5V
;PCODE: $00000669 VOL: 0
;PCODE: $0000066A VOL: 0
;PCODE: $0000066B VOL: 0
; 0007 03BB                      }
; 0007 03BC                  }
;PCODE: $0000066C VOL: 0
; 0007 03BD                  else
;PCODE: $0000066D VOL: 0
;PCODE: $0000066E VOL: 0
; 0007 03BE                  {
; 0007 03BF                     gError &= ~(1<<ERROR_VOL);  //2.5V
;PCODE: $0000066F VOL: 0
;PCODE: $00000670 VOL: 0
;PCODE: $00000671 VOL: 0
; 0007 03C0                  }
;PCODE: $00000672 VOL: 0
; 0007 03C1               }
; 0007 03C2               else
;PCODE: $00000673 VOL: 0
;PCODE: $00000674 VOL: 0
; 0007 03C3               {
; 0007 03C4                  gFlag = FLAG_VOLADJ;
;PCODE: $00000675 VOL: 0
;PCODE: $00000676 VOL: 0
; 0007 03C5                  gVolAdjCount++; //300ms
;PCODE: $00000677 VOL: 0
;PCODE: $00000678 VOL: 0
;PCODE: $00000679 VOL: 0
;PCODE: $0000067A VOL: 0
; 0007 03C6                  if( gVolAdjCount > 3 )  //300ms*3
;PCODE: $0000067B VOL: 0
;PCODE: $0000067C VOL: 0
;PCODE: $0000067D VOL: 0
; 0007 03C7                 {
; 0007 03C8                     gVolAdjCount = 0;
;PCODE: $0000067E VOL: 0
;PCODE: $0000067F VOL: 0
; 0007 03C9                     gError |= (1<<ERROR_VOL);
;PCODE: $00000680 VOL: 0
;PCODE: $00000681 VOL: 0
;PCODE: $00000682 VOL: 0
; 0007 03CA                     gCurMode =  CUR_ERROR;
;PCODE: $00000683 VOL: 0
;PCODE: $00000684 VOL: 0
; 0007 03CB                 }
; 0007 03CC               }
;PCODE: $00000685 VOL: 0
;PCODE: $00000686 VOL: 0
; 0007 03CD            }
;PCODE: $00000687 VOL: 0
; 0007 03CE          }
; 0007 03CF          else
;PCODE: $00000688 VOL: 0
;PCODE: $00000689 VOL: 0
; 0007 03D0          {
; 0007 03D1            if( gVolChkCount > 0 )
;PCODE: $0000068A VOL: 0
;PCODE: $0000068B VOL: 0
;PCODE: $0000068C VOL: 0
; 0007 03D2            {
; 0007 03D3               gVolChkCount--;
;PCODE: $0000068D VOL: 0
;PCODE: $0000068E VOL: 0
;PCODE: $0000068F VOL: 0
;PCODE: $00000690 VOL: 0
; 0007 03D4            }
; 0007 03D5            else
;PCODE: $00000691 VOL: 0
;PCODE: $00000692 VOL: 0
; 0007 03D6            {
; 0007 03D7               if(gVoltage < 20 ) mIndexVol = 0;
;PCODE: $00000693 VOL: 0
;PCODE: $00000694 VOL: 0
;PCODE: $00000695 VOL: 0
;PCODE: $00000696 VOL: 0
;PCODE: $00000697 VOL: 0
; 0007 03D8               else  mIndexVol = (gVoltage-20)/10;
;PCODE: $00000698 VOL: 0
;PCODE: $00000699 VOL: 0
;PCODE: $0000069A VOL: 0
;PCODE: $0000069B VOL: 0
;PCODE: $0000069C VOL: 0
;PCODE: $0000069D VOL: 0
;PCODE: $0000069E VOL: 0
; 0007 03D9 
; 0007 03DA               mCalvol = DacArray[mIndexVol];
;PCODE: $0000069F VOL: 0
;PCODE: $000006A0 VOL: 0
;PCODE: $000006A1 VOL: 0
;PCODE: $000006A2 VOL: 0
;PCODE: $000006A3 VOL: 0
;PCODE: $000006A4 VOL: 0
;PCODE: $000006A5 VOL: 0
; 0007 03DB 
; 0007 03DC              // mTemp = LowVolAdj[gVoltage/10-2];
; 0007 03DD              // gReadVol =(int)(mTemp+20.0f+(float)mVol*0.68f);
; 0007 03DE               if( (float)mVol > (mCalvol-mCalvol*0.2f) &&
; 0007 03DF                   (float)mVol < (mCalvol+mCalvol*0.2f) )
;PCODE: $000006A6 VOL: 0
;PCODE: $000006A7 VOL: 0
;PCODE: $000006A8 VOL: 0
;PCODE: $000006A9 VOL: 0
;PCODE: $000006AA VOL: 0
;PCODE: $000006AB VOL: 0
;PCODE: $000006AC VOL: 0
;PCODE: $000006AD VOL: 0
;PCODE: $000006AE VOL: 0
;PCODE: $000006AF VOL: 0
;PCODE: $000006B0 VOL: 0
;PCODE: $000006B1 VOL: 0
;PCODE: $000006B2 VOL: 0
;PCODE: $000006B3 VOL: 0
;PCODE: $000006B4 VOL: 0
;PCODE: $000006B5 VOL: 0
;PCODE: $000006B6 VOL: 0
;PCODE: $000006B7 VOL: 0
;PCODE: $000006B8 VOL: 0
;PCODE: $000006B9 VOL: 0
;PCODE: $000006BA VOL: 0
;PCODE: $000006BB VOL: 0
;PCODE: $000006BC VOL: 0
;PCODE: $000006BD VOL: 0
;PCODE: $000006BE VOL: 0
;PCODE: $000006BF VOL: 0
;PCODE: $000006C0 VOL: 0
; 0007 03E0               {
; 0007 03E1                  gFlag = FLAG_READY;
;PCODE: $000006C1 VOL: 0
;PCODE: $000006C2 VOL: 0
; 0007 03E2                  if( gError & (1<<ERROR_VOL) )
;PCODE: $000006C3 VOL: 0
;PCODE: $000006C4 VOL: 0
;PCODE: $000006C5 VOL: 0
; 0007 03E3                  {
; 0007 03E4                     gVolAdjCount++; //300ms
;PCODE: $000006C6 VOL: 0
;PCODE: $000006C7 VOL: 0
;PCODE: $000006C8 VOL: 0
;PCODE: $000006C9 VOL: 0
; 0007 03E5                     if( gVolAdjCount > 3 )  //300ms*3
;PCODE: $000006CA VOL: 0
;PCODE: $000006CB VOL: 0
;PCODE: $000006CC VOL: 0
; 0007 03E6                     {
; 0007 03E7                       gVolAdjCount = 0;
;PCODE: $000006CD VOL: 0
;PCODE: $000006CE VOL: 0
; 0007 03E8                       gError &= ~(1<<ERROR_VOL);  //2.5V
;PCODE: $000006CF VOL: 0
;PCODE: $000006D0 VOL: 0
;PCODE: $000006D1 VOL: 0
; 0007 03E9                     }
; 0007 03EA                  }
;PCODE: $000006D2 VOL: 0
; 0007 03EB                  else
;PCODE: $000006D3 VOL: 0
;PCODE: $000006D4 VOL: 0
; 0007 03EC                  {
; 0007 03ED                    gError &= ~(1<<ERROR_VOL);  //2.5V
;PCODE: $000006D5 VOL: 0
;PCODE: $000006D6 VOL: 0
;PCODE: $000006D7 VOL: 0
; 0007 03EE                  }
;PCODE: $000006D8 VOL: 0
; 0007 03EF               }
; 0007 03F0               else
;PCODE: $000006D9 VOL: 0
;PCODE: $000006DA VOL: 0
; 0007 03F1               {
; 0007 03F2                 gFlag = FLAG_VOLADJ;
;PCODE: $000006DB VOL: 0
;PCODE: $000006DC VOL: 0
; 0007 03F3                 gVolAdjCount++; //300ms
;PCODE: $000006DD VOL: 0
;PCODE: $000006DE VOL: 0
;PCODE: $000006DF VOL: 0
;PCODE: $000006E0 VOL: 0
; 0007 03F4                 if( gVolAdjCount > 3 )  //300ms*3
;PCODE: $000006E1 VOL: 0
;PCODE: $000006E2 VOL: 0
;PCODE: $000006E3 VOL: 0
; 0007 03F5                 {
; 0007 03F6                    gVolAdjCount = 0;
;PCODE: $000006E4 VOL: 0
;PCODE: $000006E5 VOL: 0
; 0007 03F7                    gError |= (1<<ERROR_VOL);
;PCODE: $000006E6 VOL: 0
;PCODE: $000006E7 VOL: 0
;PCODE: $000006E8 VOL: 0
; 0007 03F8                    gCurMode =  CUR_ERROR;
;PCODE: $000006E9 VOL: 0
;PCODE: $000006EA VOL: 0
; 0007 03F9                 }
; 0007 03FA               }
;PCODE: $000006EB VOL: 0
;PCODE: $000006EC VOL: 0
; 0007 03FB            }
;PCODE: $000006ED VOL: 0
; 0007 03FC          }
;PCODE: $000006EE VOL: 0
; 0007 03FD 
; 0007 03FE          if( IN_FET_SEN )
;PCODE: $000006EF VOL: 0
;PCODE: $000006F0 VOL: 0
;PCODE: $000006F1 VOL: 0
; 0007 03FF          {
; 0007 0400             PORTC = 0x00;
;PCODE: $000006F2 VOL: 0
;PCODE: $000006F3 VOL: 0
; 0007 0401             gError |= (1<<ERROR_VOL);
;PCODE: $000006F4 VOL: 0
;PCODE: $000006F5 VOL: 0
;PCODE: $000006F6 VOL: 0
; 0007 0402             gCurMode =  CUR_ERROR;
;PCODE: $000006F7 VOL: 0
;PCODE: $000006F8 VOL: 0
; 0007 0403          }
; 0007 0404 
; 0007 0405       }
;PCODE: $000006F9 VOL: 0
; 0007 0406       else
;PCODE: $000006FA VOL: 0
;PCODE: $000006FB VOL: 0
; 0007 0407       {
; 0007 0408           gVolAdjCount = 0; //2020-09-04
;PCODE: $000006FC VOL: 0
;PCODE: $000006FD VOL: 0
; 0007 0409       }
;PCODE: $000006FE VOL: 0
; 0007 040A    }
; 0007 040B    else if( gAdcLoc == 2 )
;PCODE: $000006FF VOL: 0
;PCODE: $00000700 VOL: 0
;PCODE: $00000701 VOL: 0
;PCODE: $00000702 VOL: 0
;PCODE: $00000703 VOL: 0
; 0007 040C    {
; 0007 040D       if( gRunFlag==TRUE && gElCompletFlag == TRUE )
;PCODE: $00000704 VOL: 0
;PCODE: $00000705 VOL: 0
;PCODE: $00000706 VOL: 0
;PCODE: $00000707 VOL: 0
;PCODE: $00000708 VOL: 0
;PCODE: $00000709 VOL: 0
;PCODE: $0000070A VOL: 0
;PCODE: $0000070B VOL: 0
;PCODE: $0000070C VOL: 0
;PCODE: $0000070D VOL: 0
; 0007 040E       {
; 0007 040F          gRunFlag = FALSE;
;PCODE: $0000070E VOL: 0
;PCODE: $0000070F VOL: 0
; 0007 0410          if( mVol > 25)
;PCODE: $00000710 VOL: 0
;PCODE: $00000711 VOL: 0
;PCODE: $00000712 VOL: 0
; 0007 0411          {
; 0007 0412             gError &= ~(1<<ERROR_ELOUT);  //2.5V
;PCODE: $00000713 VOL: 0
;PCODE: $00000714 VOL: 0
;PCODE: $00000715 VOL: 0
; 0007 0413 
; 0007 0414             gElCount++;
;PCODE: $00000716 VOL: 0
;PCODE: $00000717 VOL: 0
;PCODE: $00000718 VOL: 0
;PCODE: $00000719 VOL: 0
; 0007 0415             if( gElCount > 999 ) gElCount = 999;
;PCODE: $0000071A VOL: 0
;PCODE: $0000071B VOL: 0
;PCODE: $0000071C VOL: 0
;PCODE: $0000071D VOL: 0
;PCODE: $0000071E VOL: 0
; 0007 0416             HIGH_COMPLETE_LED;
;PCODE: $0000071F VOL: 0
;PCODE: $00000720 VOL: 0
;PCODE: $00000721 VOL: 0
;PCODE: $00000722 VOL: 0
; 0007 0417          }
; 0007 0418          else
;PCODE: $00000723 VOL: 0
;PCODE: $00000724 VOL: 0
; 0007 0419          {
; 0007 041A             gError |= (1<<ERROR_ELOUT);  //2.5V
;PCODE: $00000725 VOL: 0
;PCODE: $00000726 VOL: 0
;PCODE: $00000727 VOL: 0
; 0007 041B             gCurMode =  CUR_ERROR;
;PCODE: $00000728 VOL: 0
;PCODE: $00000729 VOL: 0
; 0007 041C 
; 0007 041D            // LOW_COMPLETE_LED;
; 0007 041E          }
;PCODE: $0000072A VOL: 0
; 0007 041F          HIGH_SH;
;PCODE: $0000072B VOL: 0
;PCODE: $0000072C VOL: 0
; 0007 0420       }
; 0007 0421    }
;PCODE: $0000072D VOL: 0
; 0007 0422    gAdcLoc++;
;PCODE: $0000072E VOL: 0
;PCODE: $0000072F VOL: 0
;PCODE: $00000730 VOL: 0
;PCODE: $00000731 VOL: 0
;PCODE: $00000732 VOL: 0
;PCODE: $00000733 VOL: 0
;PCODE: $00000734 VOL: 0
; 0007 0423    if( gAdcLoc > 2 ) gAdcLoc = 0;
;PCODE: $00000735 VOL: 0
;PCODE: $00000736 VOL: 0
;PCODE: $00000737 VOL: 0
;PCODE: $00000738 VOL: 0
;PCODE: $00000739 VOL: 0
; 0007 0424 }
;PCODE: $0000073A VOL: 0
;PCODE: $0000073B VOL: 0
;PCODE: $0000073C VOL: 0
;PCODE: $0000073D VOL: 0
;PCODE: $0000073E VOL: 0
;
;void DisplayLed( void )
; 0007 0427 {
;PCODE: $0000073F VOL: 0
;PCODE: $00000740 VOL: 0
; 0007 0428     if( gError > ERROR_NO )
;PCODE: $00000741 VOL: 0
;PCODE: $00000742 VOL: 0
;PCODE: $00000743 VOL: 0
; 0007 0429     {
; 0007 042A        HIGH_WARRING_LED;
;PCODE: $00000744 VOL: 0
;PCODE: $00000745 VOL: 0
;PCODE: $00000746 VOL: 0
; 0007 042B        LOW_COMPLETE_LED;
;PCODE: $00000747 VOL: 0
;PCODE: $00000748 VOL: 0
;PCODE: $00000749 VOL: 0
; 0007 042C     }
; 0007 042D     else
;PCODE: $0000074A VOL: 0
;PCODE: $0000074B VOL: 0
; 0007 042E     {
; 0007 042F        LOW_WARRING_LED;
;PCODE: $0000074C VOL: 0
;PCODE: $0000074D VOL: 0
;PCODE: $0000074E VOL: 0
; 0007 0430 
; 0007 0431        if( gFlag == FLAG_COMPLETE )
;PCODE: $0000074F VOL: 0
;PCODE: $00000750 VOL: 0
;PCODE: $00000751 VOL: 0
; 0007 0432              HIGH_COMPLETE_LED;
;PCODE: $00000752 VOL: 0
;PCODE: $00000753 VOL: 0
;PCODE: $00000754 VOL: 0
; 0007 0433        else  LOW_COMPLETE_LED;
;PCODE: $00000755 VOL: 0
;PCODE: $00000756 VOL: 0
;PCODE: $00000757 VOL: 0
;PCODE: $00000758 VOL: 0
;PCODE: $00000759 VOL: 0
; 0007 0434     }
;PCODE: $0000075A VOL: 0
;PCODE: $0000075B VOL: 0
; 0007 0435 }
;PCODE: $0000075C VOL: 0
;PCODE: $0000075D VOL: 0
;void UserProcessor( void )
; 0007 0437 {
;PCODE: $0000075E VOL: 0
;PCODE: $0000075F VOL: 0
; 0007 0438    if( gCurMode == CUR_INIT )
;PCODE: $00000760 VOL: 0
;PCODE: $00000761 VOL: 0
;PCODE: $00000762 VOL: 0
; 0007 0439    {
; 0007 043A       DAC7611_WriteVoltage(0);
;PCODE: $00000763 VOL: 0
;PCODE: $00000764 VOL: 0
;PCODE: $00000765 VOL: 0
; 0007 043B       LOW_PWM;
;PCODE: $00000766 VOL: 0
;PCODE: $00000767 VOL: 0
;PCODE: $00000768 VOL: 0
; 0007 043C       LOW_OUTRY;
;PCODE: $00000769 VOL: 0
;PCODE: $0000076A VOL: 0
;PCODE: $0000076B VOL: 0
; 0007 043D       gMode = MODE_STOP;
;PCODE: $0000076C VOL: 0
;PCODE: $0000076D VOL: 0
; 0007 043E       gFlag = FLAG_STADNBY;
;PCODE: $0000076E VOL: 0
;PCODE: $0000076F VOL: 0
; 0007 043F 
; 0007 0440       gCurMode = CUR_OK;
;PCODE: $00000770 VOL: 0
;PCODE: $00000771 VOL: 0
; 0007 0441 
; 0007 0442      // LOW_COMPLETE_LED;
; 0007 0443      // LOW_WARRING_LED;
; 0007 0444    }
; 0007 0445    else if( gCurMode == CUR_OK )
;PCODE: $00000772 VOL: 0
;PCODE: $00000773 VOL: 0
;PCODE: $00000774 VOL: 0
;PCODE: $00000775 VOL: 0
;PCODE: $00000776 VOL: 0
; 0007 0446    {
; 0007 0447        ADCProcessor();
;PCODE: $00000777 VOL: 0
; 0007 0448        DisplayLed();
;PCODE: $00000778 VOL: 0
; 0007 0449    }
; 0007 044A    else if( gCurMode == CUR_ERROR )
;PCODE: $00000779 VOL: 0
;PCODE: $0000077A VOL: 0
;PCODE: $0000077B VOL: 0
;PCODE: $0000077C VOL: 0
;PCODE: $0000077D VOL: 0
; 0007 044B    {
; 0007 044C        gCurMode = CUR_INIT;
;PCODE: $0000077E VOL: 0
;PCODE: $0000077F VOL: 0
; 0007 044D        // gInitCount = 0;
; 0007 044E        LOW_COMPLETE_LED;
;PCODE: $00000780 VOL: 0
;PCODE: $00000781 VOL: 0
;PCODE: $00000782 VOL: 0
; 0007 044F        HIGH_WARRING_LED;
;PCODE: $00000783 VOL: 0
;PCODE: $00000784 VOL: 0
;PCODE: $00000785 VOL: 0
; 0007 0450    }
; 0007 0451 }
;PCODE: $00000786 VOL: 0
;PCODE: $00000787 VOL: 0
;PCODE: $00000788 VOL: 0
;PCODE: $00000789 VOL: 0
;PCODE: $0000078A VOL: 0
;
;void main()
; 0007 0454 {
;PCODE: $0000078B VOL: 0
; 0007 0455    BYTE wEvent;
; 0007 0456    int mTimeUart0,mTimeUart1;
; 0007 0457 
; 0007 0458    SystemInit( );
;	wEvent -> R17
;	mTimeUart0 -> R18,R19
;	mTimeUart1 -> R20,R21
;PCODE: $0000078C VOL: 0
; 0007 0459 
; 0007 045A    mTimeUart0 = mTimeUart1 = 0;
;PCODE: $0000078D VOL: 0
;PCODE: $0000078E VOL: 0
;PCODE: $0000078F VOL: 0
; 0007 045B    // Global enable interrupts
; 0007 045C    #asm("sei");
;PCODE: $00000790 VOL: 0
	sei
;PCODE: $00000791 VOL: 0
; 0007 045D 
; 0007 045E    while ( TRUE )
;PCODE: $00000792 VOL: 0
; 0007 045F    {
; 0007 0460       wEvent = WaitEvent();
;PCODE: $00000793 VOL: 0
;PCODE: $00000794 VOL: 0
; 0007 0461       if( wEvent == EVN_RCVUART0 )
;PCODE: $00000795 VOL: 0
;PCODE: $00000796 VOL: 0
;PCODE: $00000797 VOL: 0
; 0007 0462       {
; 0007 0463           IPC_RunProcess0( );  //handle
;PCODE: $00000798 VOL: 0
; 0007 0464           mTimeUart0 = 0;
;PCODE: $00000799 VOL: 0
;PCODE: $0000079A VOL: 0
; 0007 0465           gError &= ~(1<<ERROR_NOTHANDLE);
;PCODE: $0000079B VOL: 0
;PCODE: $0000079C VOL: 0
;PCODE: $0000079D VOL: 0
; 0007 0466       }
; 0007 0467       else if( wEvent == EVN_RCVUART1 )
;PCODE: $0000079E VOL: 0
;PCODE: $0000079F VOL: 0
;PCODE: $000007A0 VOL: 0
;PCODE: $000007A1 VOL: 0
;PCODE: $000007A2 VOL: 0
; 0007 0468       {
; 0007 0469           IPC_RunProcess1( );  //LCD Pannel
;PCODE: $000007A3 VOL: 0
; 0007 046A           mTimeUart1 = 0;
;PCODE: $000007A4 VOL: 0
;PCODE: $000007A5 VOL: 0
; 0007 046B           gError &= ~(1<<ERROR_NOTLCD);
;PCODE: $000007A6 VOL: 0
;PCODE: $000007A7 VOL: 0
;PCODE: $000007A8 VOL: 0
; 0007 046C       }
; 0007 046D       else if(wEvent == EVN_TIMEOVER )
;PCODE: $000007A9 VOL: 0
;PCODE: $000007AA VOL: 0
;PCODE: $000007AB VOL: 0
;PCODE: $000007AC VOL: 0
;PCODE: $000007AD VOL: 0
; 0007 046E       {
; 0007 046F           UserProcessor();
;PCODE: $000007AE VOL: 0
; 0007 0470 
; 0007 0471           if( ++mTimeUart0 > 7 ) //2.1sec
;PCODE: $000007AF VOL: 0
;PCODE: $000007B0 VOL: 0
;PCODE: $000007B1 VOL: 0
;PCODE: $000007B2 VOL: 0
;PCODE: $000007B3 VOL: 0
; 0007 0472           {
; 0007 0473              mTimeUart0 = 0;
;PCODE: $000007B4 VOL: 0
;PCODE: $000007B5 VOL: 0
; 0007 0474              gError |= (1<<ERROR_NOTHANDLE);
;PCODE: $000007B6 VOL: 0
;PCODE: $000007B7 VOL: 0
;PCODE: $000007B8 VOL: 0
; 0007 0475              gCurMode = CUR_ERROR;
;PCODE: $000007B9 VOL: 0
;PCODE: $000007BA VOL: 0
; 0007 0476           }
; 0007 0477           if( ++mTimeUart1 > 7 ) //2.1sec
;PCODE: $000007BB VOL: 0
;PCODE: $000007BC VOL: 0
;PCODE: $000007BD VOL: 0
;PCODE: $000007BE VOL: 0
;PCODE: $000007BF VOL: 0
;PCODE: $000007C0 VOL: 0
; 0007 0478           {
; 0007 0479              mTimeUart1 = 0;
;PCODE: $000007C1 VOL: 0
;PCODE: $000007C2 VOL: 0
; 0007 047A              gError |= (1<<ERROR_NOTLCD);
;PCODE: $000007C3 VOL: 0
;PCODE: $000007C4 VOL: 0
;PCODE: $000007C5 VOL: 0
; 0007 047B              gCurMode = CUR_ERROR;
;PCODE: $000007C6 VOL: 0
;PCODE: $000007C7 VOL: 0
; 0007 047C           }
; 0007 047D       }
;PCODE: $000007C8 VOL: 0
; 0007 047E    }
;PCODE: $000007C9 VOL: 0
;PCODE: $000007CA VOL: 0
;PCODE: $000007CB VOL: 0
;PCODE: $000007CC VOL: 0
;PCODE: $000007CD VOL: 0
; 0007 047F }
;PCODE: $000007CE VOL: 0
;PCODE: $000007CF VOL: 0
;PCODE: $000007D0 VOL: 0
;
